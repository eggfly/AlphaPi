mpy_source_file: ./rootfs/control_board_v1.mpy
source_file: .\control_board_v1.py
header: 4d:06:00:1f
qstr_table[240]:
    .\control_board_v1.py
    <module>
    ADC
    machine
    PWM
    Pin
    SoftI2C
    gc
    time
    math
    os
    scl
    sda
    freq
    scan
    writeto_mem
    mode
    OUT
    value
    IN
    PULL_DOWN
    UART
    tx
    rx
    timeout
    PlayRecordMission
    test
    0
    1
    2
    3
    4
    5
    6
    7
    8
    9
    a
    b
    c
    d
    e
    f
    g
    h
    i
    j
    k
    l
    m
    n
    o
    p
    q
    r
    s
    t
    u
    v
    w
    x
    y
    z
    A
    B
    C
    D
    E
    F
    G
    H
    I
    J
    K
    L
    M
    N
    O
    P
    Q
    R
    S
    T
    U
    V
    W
    X
    Y
    Z
    `
    ~
    !
    @
    #
    $
    %
    ^
    &
    (
    )
    _
    =
    [
    ]
    {
    }
    \
    |
    ;
    :
    '
    "
    ,
    .
    <
    >
    ?
    +
    -
    *
    /
    calc_checksum
    uart_read_buf
    collect
    write
    readinto
    extend
    uart_read
    uart_write
    append
    read
    uart_write_buf
    sleep_ms
    Clamp
    average
    GetSysTime
    ticks_ms
    GetAccelerationRaw
    readfrom_mem
    GetAcceleration
    sqrt
    ReadPin
    WritePin
    ReadAdc
    atten
    ATTN_11DB
    read_u16
    WritePwm
    deinit
    duty
    UpdateButtonStatus
    GetLastPinStatus
    PushPlayRecordMission
    interrupt
    play_record_loop
    isFinish
    tickStep
    playAsync
    listdir
    playUntilDone
    play
    close
    recAsync
    recUntilDone
    stopRecord
    isRecord
    rec
    err1
    err2
    led_show_bytes_async
    led_show_bytes
    led_show_string
    led_show_string_async
    read_volume
    CheckForward
    IsForward
    voidCommand
    version
    __init__
    fileName
    currentFileName
    recordSec
    step
    count
    read_len
    playing_buf
    file
    recordingBufCnt
    recordingUartReadLen
    byte_read
    uart_buf
    byte_to_write
    rec_buf
    already_write
    __stop
    __tickRecord
    __tickPlay
    i2c
    addr
    pin_map
    uart
    pa_last_status
    pb_last_status
    pc_last_status
    nextMission
    currentMission
    bytearray
    charPointMap
    defaultCharPointMap
    showIndex
    data
    len
    print
    min_value
    max_value
    nums
    axial
    round
    pin_port
    str
    __name__
    __module__
    __qualname__
    is_record
    file_name
    sec
    path
    open
    show_bytes
    show_string
    min
    acc
    x_mid
    y_mid
    z_mid
    margin
    abs
    forward
    self
    is_recording
obj_table: [b'\xc4', b"'", b'\x80\x00\x08', 'checksum error', b'\x00', b'\x90', 'write error: ', 'record_start.dat', b'\x80\x11\x08', 'record_end.dat', 'v_2020_7_31']
simple_name: <module>
  raw bytecode: 2642 48:80:06:01:2c:2c:2c:2c:26:26:26:26:46:3c:2c:27:2e:27:4e:22:31:2f:2f:72:7a:84:07:84:14:84:0e:85:12:85:09:85:08:85:08:65:20:85:15:85:08:65:40:65:40:85:09:85:0a:24:24:64:85:0a:85:0f:89:8e:24:64:89:0d:85:10:6a:60:8a:09:8a:10:6b:20:8b:07:65:60:8b:27:85:07:85:09:22:37:33:37:37:36:39:33:39:39:59:36:31:36:31:37:35:37:31:31:31:33:31:37:36:35:35:35:36:33:31:33:33:33:35:33:57:37:37:37:37:37:37:38:33:35:39:35:31:37:35:37:37:37:37:37:39:33:33:33:33:38:57:33:2f:31:39:39:39:37:35:37:33:33:2f:35:35:35:33:33:33:31:31:31:31:33:2f:2f:33:33:39:31:2f:33:76:4f:64:85:09:85:15:65:20:65:20:85:10:65:20:80:10:02:2a:01:1b:03:1c:02:16:02:59:80:10:04:2a:01:1b:03:1c:04:16:04:59:80:10:05:2a:01:1b:03:1c:05:16:05:59:80:10:06:2a:01:1b:03:1c:06:16:06:59:80:51:1b:03:16:03:80:51:1b:07:16:07:80:51:1b:08:16:08:80:51:1b:09:16:09:80:51:1b:0a:16:0a:11:06:10:0b:11:05:87:34:01:10:0c:11:05:86:34:01:10:0d:22:98:b5:00:34:86:00:16:81:45:11:81:45:14:0e:36:00:80:55:16:81:46:11:81:46:92:d9:44:4e:11:81:45:14:0f:92:91:23:00:36:03:59:42:55:11:81:46:98:d9:44:4e:11:81:45:14:0f:98:a0:23:01:36:03:59:42:40:2c:04:11:05:83:10:10:11:05:13:11:10:12:81:34:84:01:83:62:11:05:8a:11:05:13:13:11:05:13:14:34:03:8a:62:11:05:94:11:05:13:13:11:05:13:14:34:03:94:62:11:05:95:11:05:13:13:11:05:13:14:34:03:95:62:16:81:47:11:03:14:15:81:22:9c:90:00:10:16:88:10:17:89:10:18:22:80:64:36:86:02:16:81:48:32:00:16:79:32:01:16:7a:32:02:16:7f:32:03:16:81:00:32:04:16:81:03:32:05:16:81:05:32:06:16:81:06:32:07:16:81:07:32:08:16:81:09:32:09:16:81:0b:32:0a:16:81:0d:32:0b:16:81:0e:32:0c:16:81:0f:32:0d:16:81:13:80:17:81:49:80:17:81:4a:80:17:81:4b:32:0e:16:81:16:32:0f:16:81:17:54:32:10:10:19:34:02:16:19:51:17:81:4c:51:17:81:4d:85:2a:01:53:33:11:16:81:18:32:12:16:81:1a:10:1a:2a:01:53:33:13:16:81:1d:10:1a:2a:01:53:33:14:16:81:1f:10:1a:2a:01:53:33:15:16:81:20:10:1a:85:2a:02:53:33:16:16:81:22:10:1a:85:2a:02:53:33:17:16:81:23:32:18:16:81:24:10:1a:85:2a:02:53:33:19:16:81:26:32:1a:16:81:29:32:1b:16:81:2a:2c:5e:11:81:4e:22:80:70:22:81:08:22:81:08:22:80:70:80:2b:05:34:01:10:1b:62:11:81:4e:80:22:80:48:22:81:78:88:80:2b:05:34:01:10:1c:62:11:81:4e:22:81:18:22:81:28:22:81:28:22:80:48:80:2b:05:34:01:10:1d:62:11:81:4e:22:81:10:22:81:08:22:81:28:22:81:50:80:2b:05:34:01:10:1e:62:11:81:4e:22:30:22:80:50:22:81:10:22:81:78:90:2b:05:34:01:10:1f:62:11:81:4e:22:81:68:22:81:28:22:81:28:22:81:28:22:81:10:2b:05:34:01:10:20:62:11:81:4e:90:a8:22:80:68:22:81:28:90:2b:05:34:01:10:21:62:11:81:4e:22:81:08:22:81:10:22:81:20:22:81:40:22:81:00:2b:05:34:01:10:22:62:11:81:4e:22:80:50:22:81:28:22:81:28:22:81:28:22:80:50:2b:05:34:01:10:23:62:11:81:4e:22:80:40:22:81:28:22:81:30:22:81:20:22:80:40:2b:05:34:01:10:24:62:11:81:4e:22:30:22:80:48:22:80:48:22:80:78:88:2b:05:34:01:10:25:62:11:81:4e:22:81:78:a8:a8:90:80:2b:05:34:01:10:26:62:11:81:4e:22:30:22:80:48:22:80:48:22:80:48:80:2b:05:34:01:10:27:62:11:81:4e:90:a8:a8:22:81:78:80:2b:05:34:01:10:28:62:11:81:4e:22:80:70:22:81:28:22:81:28:22:80:48:80:2b:05:34:01:10:29:62:11:81:4e:a0:22:80:78:22:81:20:22:81:00:80:2b:05:34:01:10:2a:62:11:81:4e:22:80:40:22:81:28:22:81:28:22:81:70:80:2b:05:34:01:10:2b:62:11:81:4e:22:81:78:a0:a0:98:80:2b:05:34:01:10:2c:62:11:81:4e:80:22:81:38:80:80:80:2b:05:34:01:10:2d:62:11:81:4e:80:88:88:22:81:30:80:2b:05:34:01:10:2e:62:11:81:4e:22:81:78:a0:22:80:50:88:80:2b:05:34:01:10:2f:62:11:81:4e:80:22:81:70:88:88:80:2b:05:34:01:10:30:62:11:81:4e:22:80:78:22:80:40:a0:22:80:40:22:80:78:2b:05:34:01:10:31:62:11:81:4e:22:80:78:22:80:40:22:80:40:22:38:80:2b:05:34:01:10:32:62:11:81:4e:22:30:22:80:48:22:80:48:22:30:80:2b:05:34:01:10:33:62:11:81:4e:22:80:78:22:80:50:22:80:50:a0:80:2b:05:34:01:10:34:62:11:81:4e:a0:22:80:50:22:80:50:22:80:78:80:2b:05:34:01:10:35:62:11:81:4e:22:38:22:80:40:22:80:40:22:80:40:80:2b:05:34:01:10:36:62:11:81:4e:88:a8:22:80:50:22:80:40:80:2b:05:34:01:10:37:62:11:81:4e:80:22:81:70:a8:a8:88:2b:05:34:01:10:38:62:11:81:4e:22:80:70:88:88:22:80:78:88:2b:05:34:01:10:39:62:11:81:4e:22:80:60:90:88:90:22:80:60:2b:05:34:01:10:3a:62:11:81:4e:22:80:78:88:90:88:22:80:78:2b:05:34:01:10:3b:62:11:81:4e:22:80:48:22:30:22:30:22:80:48:80:2b:05:34:01:10:3c:62:11:81:4e:22:80:48:a8:90:a0:22:80:40:2b:05:34:01:10:3d:62:11:81:4e:22:80:48:22:80:58:22:80:68:22:80:48:80:2b:05:34:01:10:3e:62:11:81:4e:22:80:78:22:81:20:22:81:20:22:80:78:80:2b:05:34:01:10:3f:62:11:81:4e:22:81:78:22:81:28:22:81:28:22:80:50:80:2b:05:34:01:10:40:62:11:81:4e:22:80:70:22:81:08:22:81:08:22:81:08:80:2b:05:34:01:10:41:62:11:81:4e:22:81:78:22:81:08:22:81:08:22:80:70:80:2b:05:34:01:10:42:62:11:81:4e:22:81:78:22:81:28:22:81:28:22:81:08:80:2b:05:34:01:10:43:62:11:81:4e:22:81:78:22:81:20:22:81:20:22:81:00:80:2b:05:34:01:10:44:62:11:81:4e:22:80:70:22:81:08:22:81:08:22:81:28:22:30:2b:05:34:01:10:45:62:11:81:4e:22:81:78:a0:a0:22:81:78:80:2b:05:34:01:10:46:62:11:81:4e:22:81:08:22:81:78:22:81:08:80:80:2b:05:34:01:10:47:62:11:81:4e:22:81:10:22:81:08:22:81:08:22:81:70:22:81:00:2b:05:34:01:10:48:62:11:81:4e:22:81:78:a0:22:80:50:22:81:08:80:2b:05:34:01:10:49:62:11:81:4e:22:81:78:88:88:88:80:2b:05:34:01:10:4a:62:11:81:4e:22:81:78:22:80:40:a0:22:80:40:22:81:78:2b:05:34:01:10:4b:62:11:81:4e:22:81:78:22:80:40:a0:90:22:81:78:2b:05:34:01:10:4c:62:11:81:4e:22:80:70:22:81:08:22:81:08:22:80:70:80:2b:05:34:01:10:4d:62:11:81:4e:22:81:78:22:81:20:22:81:20:22:80:40:80:2b:05:34:01:10:4e:62:11:81:4e:22:80:60:22:81:10:22:81:18:22:80:68:80:2b:05:34:01:10:4f:62:11:81:4e:22:81:78:22:81:20:22:81:20:22:80:50:88:2b:05:34:01:10:50:62:11:81:4e:22:80:48:22:81:28:22:81:28:22:81:10:80:2b:05:34:01:10:51:62:11:81:4e:22:81:00:22:81:00:22:81:78:22:81:00:22:81:00:2b:05:34:01:10:52:62:11:81:4e:22:81:70:88:88:22:81:70:80:2b:05:34:01:10:53:62:11:81:4e:22:81:60:90:88:90:22:81:60:2b:05:34:01:10:54:62:11:81:4e:22:81:78:90:a0:90:22:81:78:2b:05:34:01:10:55:62:11:81:4e:22:81:58:a0:a0:22:81:58:80:2b:05:34:01:10:56:62:11:81:4e:22:81:00:22:80:40:22:38:22:80:40:22:81:00:2b:05:34:01:10:57:62:11:81:4e:22:81:18:22:81:28:22:81:48:22:81:08:80:2b:05:34:01:10:58:62:11:81:4e:80:22:81:00:22:80:40:80:80:2b:05:34:01:10:59:62:11:81:4e:80:a0:a0:90:90:2b:05:34:01:10:5a:62:11:81:4e:80:22:81:68:80:80:80:2b:05:34:01:10:5b:62:11:81:4e:22:80:70:22:81:08:22:81:28:22:81:10:22:80:70:2b:05:34:01:10:5c:62:11:81:4e:22:80:50:22:81:78:22:80:50:22:81:78:22:80:50:2b:05:34:01:10:5d:62:11:81:4e:22:80:50:22:81:68:22:81:28:22:81:38:22:80:50:2b:05:34:01:10:5e:62:11:81:4e:22:81:48:22:81:10:a0:22:80:48:22:80:58:2b:05:34:01:10:5f:62:11:81:4e:80:22:80:40:22:81:00:22:80:40:80:2b:05:34:01:10:60:62:11:81:4e:22:80:50:22:81:28:22:81:28:22:80:50:88:2b:05:34:01:10:61:62:11:81:4e:80:22:80:70:22:81:08:80:80:2b:05:34:01:10:62:62:11:81:4e:80:22:81:08:22:80:70:80:80:2b:05:34:01:10:63:62:11:81:4e:88:88:88:88:88:2b:05:34:01:10:64:62:11:81:4e:80:22:80:50:22:80:50:22:80:50:80:2b:05:34:01:10:65:62:11:81:4e:80:22:81:78:22:81:08:22:81:08:80:2b:05:34:01:10:66:62:11:81:4e:80:22:81:08:22:81:08:22:81:78:80:2b:05:34:01:10:67:62:11:81:4e:80:a0:22:81:78:22:81:08:80:2b:05:34:01:10:68:62:11:81:4e:80:22:81:08:22:81:78:a0:80:2b:05:34:01:10:69:62:11:81:4e:22:81:00:22:80:40:a0:90:88:2b:05:34:01:10:6a:62:11:81:4e:80:22:81:78:80:80:80:2b:05:34:01:10:6b:62:11:81:4e:80:88:22:80:50:80:80:2b:05:34:01:10:6c:62:11:81:4e:80:22:80:50:80:80:80:2b:05:34:01:10:6d:62:11:81:4e:80:22:81:40:80:80:80:2b:05:34:01:10:6e:62:11:81:4e:80:22:81:40:80:22:81:40:80:2b:05:34:01:10:6f:62:11:81:4e:80:88:90:80:80:2b:05:34:01:10:70:62:11:81:4e:80:90:80:80:80:2b:05:34:01:10:71:62:11:81:4e:80:a0:22:80:50:22:81:08:80:2b:05:34:01:10:72:62:11:81:4e:80:22:81:08:22:80:50:a0:80:2b:05:34:01:10:73:62:11:81:4e:22:80:40:22:81:00:22:81:28:22:81:20:22:80:40:2b:05:34:01:10:74:62:11:81:4e:80:a0:22:80:70:a0:80:2b:05:34:01:10:75:62:11:81:4e:80:a0:a0:a0:80:2b:05:34:01:10:76:62:11:81:4e:80:22:80:50:a0:22:80:50:80:2b:05:34:01:10:77:62:11:81:4e:88:90:a0:22:80:40:22:81:00:2b:05:34:01:10:78:62:16:81:4f:11:81:4e:80:80:80:80:80:2b:05:34:01:16:81:50:80:17:81:51:32:1c:16:81:2b:32:1d:16:81:2c:32:1e:16:81:2d:32:1f:16:81:2e:32:20:16:81:2f:32:21:16:81:30:32:22:16:81:31:51:63
  prelude: (10, 0, 0, 0, 0, 0)
  args: []
  line info: 2c:2c:2c:2c:26:26:26:26:46:3c:2c:27:2e:27:4e:22:31:2f:2f:72:7a:84:07:84:14:84:0e:85:12:85:09:85:08:85:08:65:20:85:15:85:08:65:40:65:40:85:09:85:0a:24:24:64:85:0a:85:0f:89:8e:24:64:89:0d:85:10:6a:60:8a:09:8a:10:6b:20:8b:07:65:60:8b:27:85:07:85:09:22:37:33:37:37:36:39:33:39:39:59:36:31:36:31:37:35:37:31:31:31:33:31:37:36:35:35:35:36:33:31:33:33:33:35:33:57:37:37:37:37:37:37:38:33:35:39:35:31:37:35:37:37:37:37:37:39:33:33:33:33:38:57:33:2f:31:39:39:39:37:35:37:33:33:2f:35:35:35:33:33:33:31:31:31:31:33:2f:2f:33:33:39:31:2f:33:76:4f:64:85:09:85:15:65:20:65:20:85:10:65:20
  80          LOAD_CONST_SMALL_INT 0 
  10:02       LOAD_CONST_STRING ADC
  2a:01       BUILD_TUPLE 1
  1b:03       IMPORT_NAME machine
  1c:02       IMPORT_FROM ADC
  16:02       STORE_NAME ADC
  59          POP_TOP 
  80          LOAD_CONST_SMALL_INT 0 
  10:04       LOAD_CONST_STRING PWM
  2a:01       BUILD_TUPLE 1
  1b:03       IMPORT_NAME machine
  1c:04       IMPORT_FROM PWM
  16:04       STORE_NAME PWM
  59          POP_TOP 
  80          LOAD_CONST_SMALL_INT 0 
  10:05       LOAD_CONST_STRING Pin
  2a:01       BUILD_TUPLE 1
  1b:03       IMPORT_NAME machine
  1c:05       IMPORT_FROM Pin
  16:05       STORE_NAME Pin
  59          POP_TOP 
  80          LOAD_CONST_SMALL_INT 0 
  10:06       LOAD_CONST_STRING SoftI2C
  2a:01       BUILD_TUPLE 1
  1b:03       IMPORT_NAME machine
  1c:06       IMPORT_FROM SoftI2C
  16:06       STORE_NAME SoftI2C
  59          POP_TOP 
  80          LOAD_CONST_SMALL_INT 0 
  51          LOAD_CONST_NONE 
  1b:03       IMPORT_NAME machine
  16:03       STORE_NAME machine
  80          LOAD_CONST_SMALL_INT 0 
  51          LOAD_CONST_NONE 
  1b:07       IMPORT_NAME gc
  16:07       STORE_NAME gc
  80          LOAD_CONST_SMALL_INT 0 
  51          LOAD_CONST_NONE 
  1b:08       IMPORT_NAME time
  16:08       STORE_NAME time
  80          LOAD_CONST_SMALL_INT 0 
  51          LOAD_CONST_NONE 
  1b:09       IMPORT_NAME math
  16:09       STORE_NAME math
  80          LOAD_CONST_SMALL_INT 0 
  51          LOAD_CONST_NONE 
  1b:0a       IMPORT_NAME os
  16:0a       STORE_NAME os
  11:06       LOAD_NAME SoftI2C
  10:0b       LOAD_CONST_STRING scl
  11:05       LOAD_NAME Pin
  87          LOAD_CONST_SMALL_INT 7 
  34:01       CALL_FUNCTION 1
  10:0c       LOAD_CONST_STRING sda
  11:05       LOAD_NAME Pin
  86          LOAD_CONST_SMALL_INT 6 
  34:01       CALL_FUNCTION 1
  10:0d       LOAD_CONST_STRING freq
  22:98:b5:00 LOAD_CONST_SMALL_INT 400000
  34:86:00    CALL_FUNCTION 768
  16:81:45    STORE_NAME i2c
  11:81:45    LOAD_NAME i2c
  14:0e       LOAD_METHOD scan
  36:00       CALL_METHOD 0
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  16:81:46    STORE_NAME addr
  11:81:46    LOAD_NAME addr
  92          LOAD_CONST_SMALL_INT 18 
  d9          BINARY_OP 2 __eq__ 
  44:4e       POP_JUMP_IF_FALSE 14
  11:81:45    LOAD_NAME i2c
  14:0f       LOAD_METHOD writeto_mem
  92          LOAD_CONST_SMALL_INT 18 
  91          LOAD_CONST_SMALL_INT 17 
  23:00       LOAD_CONST_OBJ b'\xc4'
  36:03       CALL_METHOD 3
  59          POP_TOP 
  42:55       JUMP 21
  11:81:46    LOAD_NAME addr
  98          LOAD_CONST_SMALL_INT 24 
  d9          BINARY_OP 2 __eq__ 
  44:4e       POP_JUMP_IF_FALSE 14
  11:81:45    LOAD_NAME i2c
  14:0f       LOAD_METHOD writeto_mem
  98          LOAD_CONST_SMALL_INT 24 
  a0          LOAD_CONST_SMALL_INT 32 
  23:01       LOAD_CONST_OBJ b"'"
  36:03       CALL_METHOD 3
  59          POP_TOP 
  42:40       JUMP 0
  2c:04       BUILD_MAP 4
  11:05       LOAD_NAME Pin
  83          LOAD_CONST_SMALL_INT 3 
  10:10       LOAD_CONST_STRING mode
  11:05       LOAD_NAME Pin
  13:11       LOAD_ATTR OUT
  10:12       LOAD_CONST_STRING value
  81          LOAD_CONST_SMALL_INT 1 
  34:84:01    CALL_FUNCTION 513
  83          LOAD_CONST_SMALL_INT 3 
  62          STORE_MAP 
  11:05       LOAD_NAME Pin
  8a          LOAD_CONST_SMALL_INT 10 
  11:05       LOAD_NAME Pin
  13:13       LOAD_ATTR IN
  11:05       LOAD_NAME Pin
  13:14       LOAD_ATTR PULL_DOWN
  34:03       CALL_FUNCTION 3
  8a          LOAD_CONST_SMALL_INT 10 
  62          STORE_MAP 
  11:05       LOAD_NAME Pin
  94          LOAD_CONST_SMALL_INT 20 
  11:05       LOAD_NAME Pin
  13:13       LOAD_ATTR IN
  11:05       LOAD_NAME Pin
  13:14       LOAD_ATTR PULL_DOWN
  34:03       CALL_FUNCTION 3
  94          LOAD_CONST_SMALL_INT 20 
  62          STORE_MAP 
  11:05       LOAD_NAME Pin
  95          LOAD_CONST_SMALL_INT 21 
  11:05       LOAD_NAME Pin
  13:13       LOAD_ATTR IN
  11:05       LOAD_NAME Pin
  13:14       LOAD_ATTR PULL_DOWN
  34:03       CALL_FUNCTION 3
  95          LOAD_CONST_SMALL_INT 21 
  62          STORE_MAP 
  16:81:47    STORE_NAME pin_map
  11:03       LOAD_NAME machine
  14:15       LOAD_METHOD UART
  81          LOAD_CONST_SMALL_INT 1 
  22:9c:90:00 LOAD_CONST_SMALL_INT 460800
  10:16       LOAD_CONST_STRING tx
  88          LOAD_CONST_SMALL_INT 8 
  10:17       LOAD_CONST_STRING rx
  89          LOAD_CONST_SMALL_INT 9 
  10:18       LOAD_CONST_STRING timeout
  22:80:64    LOAD_CONST_SMALL_INT 100
  36:86:02    CALL_METHOD 770
  16:81:48    STORE_NAME uart
  32:00       MAKE_FUNCTION 0
  16:79       STORE_NAME calc_checksum
  32:01       MAKE_FUNCTION 1
  16:7a       STORE_NAME uart_read_buf
  32:02       MAKE_FUNCTION 2
  16:7f       STORE_NAME uart_read
  32:03       MAKE_FUNCTION 3
  16:81:00    STORE_NAME uart_write
  32:04       MAKE_FUNCTION 4
  16:81:03    STORE_NAME uart_write_buf
  32:05       MAKE_FUNCTION 5
  16:81:05    STORE_NAME Clamp
  32:06       MAKE_FUNCTION 6
  16:81:06    STORE_NAME average
  32:07       MAKE_FUNCTION 7
  16:81:07    STORE_NAME GetSysTime
  32:08       MAKE_FUNCTION 8
  16:81:09    STORE_NAME GetAccelerationRaw
  32:09       MAKE_FUNCTION 9
  16:81:0b    STORE_NAME GetAcceleration
  32:0a       MAKE_FUNCTION 10
  16:81:0d    STORE_NAME ReadPin
  32:0b       MAKE_FUNCTION 11
  16:81:0e    STORE_NAME WritePin
  32:0c       MAKE_FUNCTION 12
  16:81:0f    STORE_NAME ReadAdc
  32:0d       MAKE_FUNCTION 13
  16:81:13    STORE_NAME WritePwm
  80          LOAD_CONST_SMALL_INT 0 
  17:81:49    STORE_GLOBAL pa_last_status
  80          LOAD_CONST_SMALL_INT 0 
  17:81:4a    STORE_GLOBAL pb_last_status
  80          LOAD_CONST_SMALL_INT 0 
  17:81:4b    STORE_GLOBAL pc_last_status
  32:0e       MAKE_FUNCTION 14
  16:81:16    STORE_NAME UpdateButtonStatus
  32:0f       MAKE_FUNCTION 15
  16:81:17    STORE_NAME GetLastPinStatus
  54          LOAD_BUILD_CLASS 
  32:10       MAKE_FUNCTION 16
  10:19       LOAD_CONST_STRING PlayRecordMission
  34:02       CALL_FUNCTION 2
  16:19       STORE_NAME PlayRecordMission
  51          LOAD_CONST_NONE 
  17:81:4c    STORE_GLOBAL nextMission
  51          LOAD_CONST_NONE 
  17:81:4d    STORE_GLOBAL currentMission
  85          LOAD_CONST_SMALL_INT 5 
  2a:01       BUILD_TUPLE 1
  53          LOAD_NULL 
  33:11       MAKE_FUNCTION_DEFARGS 17
  16:81:18    STORE_NAME PushPlayRecordMission
  32:12       MAKE_FUNCTION 18
  16:81:1a    STORE_NAME play_record_loop
  10:1a       LOAD_CONST_STRING test
  2a:01       BUILD_TUPLE 1
  53          LOAD_NULL 
  33:13       MAKE_FUNCTION_DEFARGS 19
  16:81:1d    STORE_NAME playAsync
  10:1a       LOAD_CONST_STRING test
  2a:01       BUILD_TUPLE 1
  53          LOAD_NULL 
  33:14       MAKE_FUNCTION_DEFARGS 20
  16:81:1f    STORE_NAME playUntilDone
  10:1a       LOAD_CONST_STRING test
  2a:01       BUILD_TUPLE 1
  53          LOAD_NULL 
  33:15       MAKE_FUNCTION_DEFARGS 21
  16:81:20    STORE_NAME play
  10:1a       LOAD_CONST_STRING test
  85          LOAD_CONST_SMALL_INT 5 
  2a:02       BUILD_TUPLE 2
  53          LOAD_NULL 
  33:16       MAKE_FUNCTION_DEFARGS 22
  16:81:22    STORE_NAME recAsync
  10:1a       LOAD_CONST_STRING test
  85          LOAD_CONST_SMALL_INT 5 
  2a:02       BUILD_TUPLE 2
  53          LOAD_NULL 
  33:17       MAKE_FUNCTION_DEFARGS 23
  16:81:23    STORE_NAME recUntilDone
  32:18       MAKE_FUNCTION 24
  16:81:24    STORE_NAME stopRecord
  10:1a       LOAD_CONST_STRING test
  85          LOAD_CONST_SMALL_INT 5 
  2a:02       BUILD_TUPLE 2
  53          LOAD_NULL 
  33:19       MAKE_FUNCTION_DEFARGS 25
  16:81:26    STORE_NAME rec
  32:1a       MAKE_FUNCTION 26
  16:81:29    STORE_NAME led_show_bytes_async
  32:1b       MAKE_FUNCTION 27
  16:81:2a    STORE_NAME led_show_bytes
  2c:5e       BUILD_MAP 94
  11:81:4e    LOAD_NAME bytearray
  22:80:70    LOAD_CONST_SMALL_INT 112
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:80:70    LOAD_CONST_SMALL_INT 112
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:1b       LOAD_CONST_STRING 0
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:81:78    LOAD_CONST_SMALL_INT 248
  88          LOAD_CONST_SMALL_INT 8 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:1c       LOAD_CONST_STRING 1
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:18    LOAD_CONST_SMALL_INT 152
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:80:48    LOAD_CONST_SMALL_INT 72
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:1d       LOAD_CONST_STRING 2
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:10    LOAD_CONST_SMALL_INT 144
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:50    LOAD_CONST_SMALL_INT 208
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:1e       LOAD_CONST_STRING 3
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:30       LOAD_CONST_SMALL_INT 48
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:81:10    LOAD_CONST_SMALL_INT 144
  22:81:78    LOAD_CONST_SMALL_INT 248
  90          LOAD_CONST_SMALL_INT 16 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:1f       LOAD_CONST_STRING 4
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:68    LOAD_CONST_SMALL_INT 232
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:10    LOAD_CONST_SMALL_INT 144
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:20       LOAD_CONST_STRING 5
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  90          LOAD_CONST_SMALL_INT 16 
  a8          LOAD_CONST_SMALL_INT 40 
  22:80:68    LOAD_CONST_SMALL_INT 104
  22:81:28    LOAD_CONST_SMALL_INT 168
  90          LOAD_CONST_SMALL_INT 16 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:21       LOAD_CONST_STRING 6
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:10    LOAD_CONST_SMALL_INT 144
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:81:40    LOAD_CONST_SMALL_INT 192
  22:81:00    LOAD_CONST_SMALL_INT 128
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:22       LOAD_CONST_STRING 7
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:80:50    LOAD_CONST_SMALL_INT 80
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:23       LOAD_CONST_STRING 8
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:30    LOAD_CONST_SMALL_INT 176
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:80:40    LOAD_CONST_SMALL_INT 64
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:24       LOAD_CONST_STRING 9
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:30       LOAD_CONST_SMALL_INT 48
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:80:78    LOAD_CONST_SMALL_INT 120
  88          LOAD_CONST_SMALL_INT 8 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:25       LOAD_CONST_STRING a
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  a8          LOAD_CONST_SMALL_INT 40 
  a8          LOAD_CONST_SMALL_INT 40 
  90          LOAD_CONST_SMALL_INT 16 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:26       LOAD_CONST_STRING b
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:30       LOAD_CONST_SMALL_INT 48
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:80:48    LOAD_CONST_SMALL_INT 72
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:27       LOAD_CONST_STRING c
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  90          LOAD_CONST_SMALL_INT 16 
  a8          LOAD_CONST_SMALL_INT 40 
  a8          LOAD_CONST_SMALL_INT 40 
  22:81:78    LOAD_CONST_SMALL_INT 248
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:28       LOAD_CONST_STRING d
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:70    LOAD_CONST_SMALL_INT 112
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:80:48    LOAD_CONST_SMALL_INT 72
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:29       LOAD_CONST_STRING e
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:78    LOAD_CONST_SMALL_INT 120
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:81:00    LOAD_CONST_SMALL_INT 128
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:2a       LOAD_CONST_STRING f
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:70    LOAD_CONST_SMALL_INT 240
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:2b       LOAD_CONST_STRING g
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  a0          LOAD_CONST_SMALL_INT 32 
  a0          LOAD_CONST_SMALL_INT 32 
  98          LOAD_CONST_SMALL_INT 24 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:2c       LOAD_CONST_STRING h
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:38    LOAD_CONST_SMALL_INT 184
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:2d       LOAD_CONST_STRING i
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  22:81:30    LOAD_CONST_SMALL_INT 176
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:2e       LOAD_CONST_STRING j
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:50    LOAD_CONST_SMALL_INT 80
  88          LOAD_CONST_SMALL_INT 8 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:2f       LOAD_CONST_STRING k
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:70    LOAD_CONST_SMALL_INT 240
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:30       LOAD_CONST_STRING l
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:78    LOAD_CONST_SMALL_INT 120
  22:80:40    LOAD_CONST_SMALL_INT 64
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:80:78    LOAD_CONST_SMALL_INT 120
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:31       LOAD_CONST_STRING m
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:78    LOAD_CONST_SMALL_INT 120
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:38       LOAD_CONST_SMALL_INT 56
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:32       LOAD_CONST_STRING n
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:30       LOAD_CONST_SMALL_INT 48
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:30       LOAD_CONST_SMALL_INT 48
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:33       LOAD_CONST_STRING o
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:78    LOAD_CONST_SMALL_INT 120
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:80:50    LOAD_CONST_SMALL_INT 80
  a0          LOAD_CONST_SMALL_INT 32 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:34       LOAD_CONST_STRING p
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:80:78    LOAD_CONST_SMALL_INT 120
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:35       LOAD_CONST_STRING q
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:38       LOAD_CONST_SMALL_INT 56
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:80:40    LOAD_CONST_SMALL_INT 64
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:36       LOAD_CONST_STRING r
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  88          LOAD_CONST_SMALL_INT 8 
  a8          LOAD_CONST_SMALL_INT 40 
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:80:40    LOAD_CONST_SMALL_INT 64
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:37       LOAD_CONST_STRING s
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:70    LOAD_CONST_SMALL_INT 240
  a8          LOAD_CONST_SMALL_INT 40 
  a8          LOAD_CONST_SMALL_INT 40 
  88          LOAD_CONST_SMALL_INT 8 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:38       LOAD_CONST_STRING t
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:70    LOAD_CONST_SMALL_INT 112
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  22:80:78    LOAD_CONST_SMALL_INT 120
  88          LOAD_CONST_SMALL_INT 8 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:39       LOAD_CONST_STRING u
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:60    LOAD_CONST_SMALL_INT 96
  90          LOAD_CONST_SMALL_INT 16 
  88          LOAD_CONST_SMALL_INT 8 
  90          LOAD_CONST_SMALL_INT 16 
  22:80:60    LOAD_CONST_SMALL_INT 96
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:3a       LOAD_CONST_STRING v
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:78    LOAD_CONST_SMALL_INT 120
  88          LOAD_CONST_SMALL_INT 8 
  90          LOAD_CONST_SMALL_INT 16 
  88          LOAD_CONST_SMALL_INT 8 
  22:80:78    LOAD_CONST_SMALL_INT 120
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:3b       LOAD_CONST_STRING w
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:30       LOAD_CONST_SMALL_INT 48
  22:30       LOAD_CONST_SMALL_INT 48
  22:80:48    LOAD_CONST_SMALL_INT 72
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:3c       LOAD_CONST_STRING x
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:48    LOAD_CONST_SMALL_INT 72
  a8          LOAD_CONST_SMALL_INT 40 
  90          LOAD_CONST_SMALL_INT 16 
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:40    LOAD_CONST_SMALL_INT 64
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:3d       LOAD_CONST_STRING y
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:80:58    LOAD_CONST_SMALL_INT 88
  22:80:68    LOAD_CONST_SMALL_INT 104
  22:80:48    LOAD_CONST_SMALL_INT 72
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:3e       LOAD_CONST_STRING z
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:78    LOAD_CONST_SMALL_INT 120
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:80:78    LOAD_CONST_SMALL_INT 120
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:3f       LOAD_CONST_STRING A
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:80:50    LOAD_CONST_SMALL_INT 80
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:40       LOAD_CONST_STRING B
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:70    LOAD_CONST_SMALL_INT 112
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:08    LOAD_CONST_SMALL_INT 136
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:41       LOAD_CONST_STRING C
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:80:70    LOAD_CONST_SMALL_INT 112
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:42       LOAD_CONST_STRING D
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:08    LOAD_CONST_SMALL_INT 136
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:43       LOAD_CONST_STRING E
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:81:00    LOAD_CONST_SMALL_INT 128
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:44       LOAD_CONST_STRING F
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:70    LOAD_CONST_SMALL_INT 112
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:30       LOAD_CONST_SMALL_INT 48
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:45       LOAD_CONST_STRING G
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  a0          LOAD_CONST_SMALL_INT 32 
  a0          LOAD_CONST_SMALL_INT 32 
  22:81:78    LOAD_CONST_SMALL_INT 248
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:46       LOAD_CONST_STRING H
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:08    LOAD_CONST_SMALL_INT 136
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:47       LOAD_CONST_STRING I
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:10    LOAD_CONST_SMALL_INT 144
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:70    LOAD_CONST_SMALL_INT 240
  22:81:00    LOAD_CONST_SMALL_INT 128
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:48       LOAD_CONST_STRING J
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:81:08    LOAD_CONST_SMALL_INT 136
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:49       LOAD_CONST_STRING K
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:4a       LOAD_CONST_STRING L
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:80:40    LOAD_CONST_SMALL_INT 64
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:81:78    LOAD_CONST_SMALL_INT 248
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:4b       LOAD_CONST_STRING M
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:80:40    LOAD_CONST_SMALL_INT 64
  a0          LOAD_CONST_SMALL_INT 32 
  90          LOAD_CONST_SMALL_INT 16 
  22:81:78    LOAD_CONST_SMALL_INT 248
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:4c       LOAD_CONST_STRING N
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:70    LOAD_CONST_SMALL_INT 112
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:80:70    LOAD_CONST_SMALL_INT 112
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:4d       LOAD_CONST_STRING O
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:80:40    LOAD_CONST_SMALL_INT 64
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:4e       LOAD_CONST_STRING P
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:60    LOAD_CONST_SMALL_INT 96
  22:81:10    LOAD_CONST_SMALL_INT 144
  22:81:18    LOAD_CONST_SMALL_INT 152
  22:80:68    LOAD_CONST_SMALL_INT 104
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:4f       LOAD_CONST_STRING Q
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:80:50    LOAD_CONST_SMALL_INT 80
  88          LOAD_CONST_SMALL_INT 8 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:50       LOAD_CONST_STRING R
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:10    LOAD_CONST_SMALL_INT 144
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:51       LOAD_CONST_STRING S
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:00    LOAD_CONST_SMALL_INT 128
  22:81:00    LOAD_CONST_SMALL_INT 128
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:00    LOAD_CONST_SMALL_INT 128
  22:81:00    LOAD_CONST_SMALL_INT 128
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:52       LOAD_CONST_STRING T
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:70    LOAD_CONST_SMALL_INT 240
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  22:81:70    LOAD_CONST_SMALL_INT 240
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:53       LOAD_CONST_STRING U
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:60    LOAD_CONST_SMALL_INT 224
  90          LOAD_CONST_SMALL_INT 16 
  88          LOAD_CONST_SMALL_INT 8 
  90          LOAD_CONST_SMALL_INT 16 
  22:81:60    LOAD_CONST_SMALL_INT 224
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:54       LOAD_CONST_STRING V
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:78    LOAD_CONST_SMALL_INT 248
  90          LOAD_CONST_SMALL_INT 16 
  a0          LOAD_CONST_SMALL_INT 32 
  90          LOAD_CONST_SMALL_INT 16 
  22:81:78    LOAD_CONST_SMALL_INT 248
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:55       LOAD_CONST_STRING W
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:58    LOAD_CONST_SMALL_INT 216
  a0          LOAD_CONST_SMALL_INT 32 
  a0          LOAD_CONST_SMALL_INT 32 
  22:81:58    LOAD_CONST_SMALL_INT 216
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:56       LOAD_CONST_STRING X
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:00    LOAD_CONST_SMALL_INT 128
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:38       LOAD_CONST_SMALL_INT 56
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:81:00    LOAD_CONST_SMALL_INT 128
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:57       LOAD_CONST_STRING Y
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:18    LOAD_CONST_SMALL_INT 152
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:48    LOAD_CONST_SMALL_INT 200
  22:81:08    LOAD_CONST_SMALL_INT 136
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:58       LOAD_CONST_STRING Z
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:00    LOAD_CONST_SMALL_INT 128
  22:80:40    LOAD_CONST_SMALL_INT 64
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:59       LOAD_CONST_STRING `
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  a0          LOAD_CONST_SMALL_INT 32 
  a0          LOAD_CONST_SMALL_INT 32 
  90          LOAD_CONST_SMALL_INT 16 
  90          LOAD_CONST_SMALL_INT 16 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:5a       LOAD_CONST_STRING ~
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:68    LOAD_CONST_SMALL_INT 232
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:5b       LOAD_CONST_STRING !
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:70    LOAD_CONST_SMALL_INT 112
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:10    LOAD_CONST_SMALL_INT 144
  22:80:70    LOAD_CONST_SMALL_INT 112
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:5c       LOAD_CONST_STRING @
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:80:50    LOAD_CONST_SMALL_INT 80
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:5d       LOAD_CONST_STRING #
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:81:68    LOAD_CONST_SMALL_INT 232
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:38    LOAD_CONST_SMALL_INT 184
  22:80:50    LOAD_CONST_SMALL_INT 80
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:5e       LOAD_CONST_STRING $
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:48    LOAD_CONST_SMALL_INT 200
  22:81:10    LOAD_CONST_SMALL_INT 144
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:48    LOAD_CONST_SMALL_INT 72
  22:80:58    LOAD_CONST_SMALL_INT 88
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:5f       LOAD_CONST_STRING %
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:81:00    LOAD_CONST_SMALL_INT 128
  22:80:40    LOAD_CONST_SMALL_INT 64
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:60       LOAD_CONST_STRING ^
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:80:50    LOAD_CONST_SMALL_INT 80
  88          LOAD_CONST_SMALL_INT 8 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:61       LOAD_CONST_STRING &
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:80:70    LOAD_CONST_SMALL_INT 112
  22:81:08    LOAD_CONST_SMALL_INT 136
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:62       LOAD_CONST_STRING (
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:80:70    LOAD_CONST_SMALL_INT 112
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:63       LOAD_CONST_STRING )
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  88          LOAD_CONST_SMALL_INT 8 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:64       LOAD_CONST_STRING _
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:80:50    LOAD_CONST_SMALL_INT 80
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:65       LOAD_CONST_STRING =
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:08    LOAD_CONST_SMALL_INT 136
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:66       LOAD_CONST_STRING [
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:78    LOAD_CONST_SMALL_INT 248
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:67       LOAD_CONST_STRING ]
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  a0          LOAD_CONST_SMALL_INT 32 
  22:81:78    LOAD_CONST_SMALL_INT 248
  22:81:08    LOAD_CONST_SMALL_INT 136
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:68       LOAD_CONST_STRING {
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:81:78    LOAD_CONST_SMALL_INT 248
  a0          LOAD_CONST_SMALL_INT 32 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:69       LOAD_CONST_STRING }
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:81:00    LOAD_CONST_SMALL_INT 128
  22:80:40    LOAD_CONST_SMALL_INT 64
  a0          LOAD_CONST_SMALL_INT 32 
  90          LOAD_CONST_SMALL_INT 16 
  88          LOAD_CONST_SMALL_INT 8 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:6a       LOAD_CONST_STRING \
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:78    LOAD_CONST_SMALL_INT 248
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:6b       LOAD_CONST_STRING |
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  88          LOAD_CONST_SMALL_INT 8 
  22:80:50    LOAD_CONST_SMALL_INT 80
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:6c       LOAD_CONST_STRING ;
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:80:50    LOAD_CONST_SMALL_INT 80
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:6d       LOAD_CONST_STRING :
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:40    LOAD_CONST_SMALL_INT 192
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:6e       LOAD_CONST_STRING '
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:40    LOAD_CONST_SMALL_INT 192
  80          LOAD_CONST_SMALL_INT 0 
  22:81:40    LOAD_CONST_SMALL_INT 192
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:6f       LOAD_CONST_STRING "
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  88          LOAD_CONST_SMALL_INT 8 
  90          LOAD_CONST_SMALL_INT 16 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:70       LOAD_CONST_STRING ,
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  90          LOAD_CONST_SMALL_INT 16 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:71       LOAD_CONST_STRING .
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:50    LOAD_CONST_SMALL_INT 80
  22:81:08    LOAD_CONST_SMALL_INT 136
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:72       LOAD_CONST_STRING <
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:81:08    LOAD_CONST_SMALL_INT 136
  22:80:50    LOAD_CONST_SMALL_INT 80
  a0          LOAD_CONST_SMALL_INT 32 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:73       LOAD_CONST_STRING >
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:81:00    LOAD_CONST_SMALL_INT 128
  22:81:28    LOAD_CONST_SMALL_INT 168
  22:81:20    LOAD_CONST_SMALL_INT 160
  22:80:40    LOAD_CONST_SMALL_INT 64
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:74       LOAD_CONST_STRING ?
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:70    LOAD_CONST_SMALL_INT 112
  a0          LOAD_CONST_SMALL_INT 32 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:75       LOAD_CONST_STRING +
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  a0          LOAD_CONST_SMALL_INT 32 
  a0          LOAD_CONST_SMALL_INT 32 
  a0          LOAD_CONST_SMALL_INT 32 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:76       LOAD_CONST_STRING -
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  22:80:50    LOAD_CONST_SMALL_INT 80
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:50    LOAD_CONST_SMALL_INT 80
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:77       LOAD_CONST_STRING *
  62          STORE_MAP 
  11:81:4e    LOAD_NAME bytearray
  88          LOAD_CONST_SMALL_INT 8 
  90          LOAD_CONST_SMALL_INT 16 
  a0          LOAD_CONST_SMALL_INT 32 
  22:80:40    LOAD_CONST_SMALL_INT 64
  22:81:00    LOAD_CONST_SMALL_INT 128
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  10:78       LOAD_CONST_STRING /
  62          STORE_MAP 
  16:81:4f    STORE_NAME charPointMap
  11:81:4e    LOAD_NAME bytearray
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  80          LOAD_CONST_SMALL_INT 0 
  2b:05       BUILD_LIST 5
  34:01       CALL_FUNCTION 1
  16:81:50    STORE_NAME defaultCharPointMap
  80          LOAD_CONST_SMALL_INT 0 
  17:81:51    STORE_GLOBAL showIndex
  32:1c       MAKE_FUNCTION 28
  16:81:2b    STORE_NAME led_show_string
  32:1d       MAKE_FUNCTION 29
  16:81:2c    STORE_NAME led_show_string_async
  32:1e       MAKE_FUNCTION 30
  16:81:2d    STORE_NAME read_volume
  32:1f       MAKE_FUNCTION 31
  16:81:2e    STORE_NAME CheckForward
  32:20       MAKE_FUNCTION 32
  16:81:2f    STORE_NAME IsForward
  32:21       MAKE_FUNCTION 33
  16:81:30    STORE_NAME voidCommand
  32:22       MAKE_FUNCTION 34
  16:81:31    STORE_NAME version
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: ['calc_checksum', 'uart_read_buf', 'uart_read', 'uart_write', 'uart_write_buf', 'Clamp', 'average', 'GetSysTime', 'GetAccelerationRaw', 'GetAcceleration', 'ReadPin', 'WritePin', 'ReadAdc', 'WritePwm', 'UpdateButtonStatus', 'GetLastPinStatus', 'PlayRecordMission', 'PushPlayRecordMission', 'play_record_loop', 'playAsync', 'playUntilDone', 'play', 'recAsync', 'recUntilDone', 'stopRecord', 'rec', 'led_show_bytes_async', 'led_show_bytes', 'led_show_string', 'led_show_string_async', 'read_volume', 'CheckForward', 'IsForward', 'voidCommand', 'version']
simple_name: calc_checksum
  raw bytecode: 46 39:10:79:81:52:80:1c:22:2d:2f:80:c1:12:81:53:b0:34:01:81:f3:80:42:4a:57:c2:b1:b0:b2:55:e5:c1:81:e5:58:5a:d7:43:31:59:59:b1:22:81:7f:ef:63
  prelude: (8, 0, 0, 1, 0, 0)
  args: ['data']
  line info: 80:1c:22:2d:2f
  80          LOAD_CONST_SMALL_INT 0 
  c1          STORE_FAST 1 
  12:81:53    LOAD_GLOBAL len
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  81          LOAD_CONST_SMALL_INT 1 
  f3          BINARY_OP 28 __sub__ 
  80          LOAD_CONST_SMALL_INT 0 
  42:4a       JUMP 10
  57          DUP_TOP 
  c2          STORE_FAST 2 
  b1          LOAD_FAST 1 
  b0          LOAD_FAST 0 
  b2          LOAD_FAST 2 
  55          LOAD_SUBSCR 
  e5          BINARY_OP 14 __iadd__ 
  c1          STORE_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  e5          BINARY_OP 14 __iadd__ 
  58          DUP_TOP_TWO 
  5a          ROT_TWO 
  d7          BINARY_OP 0 __lt__ 
  43:31       POP_JUMP_IF_TRUE -15
  59          POP_TOP 
  59          POP_TOP 
  b1          LOAD_FAST 1 
  22:81:7f    LOAD_CONST_SMALL_INT 255
  ef          BINARY_OP 24 __and__ 
  63          RETURN_VALUE 
  children: []
simple_name: uart_read_buf
  raw bytecode: 137 5a:2e:7a:81:46:81:37:80:23:27:27:29:23:24:25:22:28:24:24:29:2a:24:2c:2c:2a:12:07:14:7b:36:00:59:12:81:4e:80:34:01:c2:12:81:4e:22:81:4d:34:01:c3:42:ce:80:22:81:48:c4:b1:b4:d7:44:42:b1:c4:12:81:4e:23:02:34:01:c5:b0:b5:81:56:b4:b5:82:56:12:81:48:14:7c:b5:36:01:59:12:81:48:14:7d:b3:83:36:02:59:b3:82:55:c6:12:81:48:14:7d:b3:b6:81:f2:36:02:59:b2:14:7e:b3:80:b6:2e:02:55:36:01:59:b1:b6:f3:c1:b1:80:d8:43:ac:7f:b2:63
  prelude: (12, 0, 0, 2, 0, 0)
  args: ['addr', 'count']
  line info: 80:23:27:27:29:23:24:25:22:28:24:24:29:2a:24:2c:2c:2a
  12:07       LOAD_GLOBAL gc
  14:7b       LOAD_METHOD collect
  36:00       CALL_METHOD 0
  59          POP_TOP 
  12:81:4e    LOAD_GLOBAL bytearray
  80          LOAD_CONST_SMALL_INT 0 
  34:01       CALL_FUNCTION 1
  c2          STORE_FAST 2 
  12:81:4e    LOAD_GLOBAL bytearray
  22:81:4d    LOAD_CONST_SMALL_INT 205
  34:01       CALL_FUNCTION 1
  c3          STORE_FAST 3 
  42:ce:80    JUMP 78
  22:81:48    LOAD_CONST_SMALL_INT 200
  c4          STORE_FAST 4 
  b1          LOAD_FAST 1 
  b4          LOAD_FAST 4 
  d7          BINARY_OP 0 __lt__ 
  44:42       POP_JUMP_IF_FALSE 2
  b1          LOAD_FAST 1 
  c4          STORE_FAST 4 
  12:81:4e    LOAD_GLOBAL bytearray
  23:02       LOAD_CONST_OBJ b'\x80\x00\x08'
  34:01       CALL_FUNCTION 1
  c5          STORE_FAST 5 
  b0          LOAD_FAST 0 
  b5          LOAD_FAST 5 
  81          LOAD_CONST_SMALL_INT 1 
  56          STORE_SUBSCR 
  b4          LOAD_FAST 4 
  b5          LOAD_FAST 5 
  82          LOAD_CONST_SMALL_INT 2 
  56          STORE_SUBSCR 
  12:81:48    LOAD_GLOBAL uart
  14:7c       LOAD_METHOD write
  b5          LOAD_FAST 5 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  12:81:48    LOAD_GLOBAL uart
  14:7d       LOAD_METHOD readinto
  b3          LOAD_FAST 3 
  83          LOAD_CONST_SMALL_INT 3 
  36:02       CALL_METHOD 2
  59          POP_TOP 
  b3          LOAD_FAST 3 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  c6          STORE_FAST 6 
  12:81:48    LOAD_GLOBAL uart
  14:7d       LOAD_METHOD readinto
  b3          LOAD_FAST 3 
  b6          LOAD_FAST 6 
  81          LOAD_CONST_SMALL_INT 1 
  f2          BINARY_OP 27 __add__ 
  36:02       CALL_METHOD 2
  59          POP_TOP 
  b2          LOAD_FAST 2 
  14:7e       LOAD_METHOD extend
  b3          LOAD_FAST 3 
  80          LOAD_CONST_SMALL_INT 0 
  b6          LOAD_FAST 6 
  2e:02       BUILD_SLICE 2
  55          LOAD_SUBSCR 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  b1          LOAD_FAST 1 
  b6          LOAD_FAST 6 
  f3          BINARY_OP 28 __sub__ 
  c1          STORE_FAST 1 
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  d8          BINARY_OP 1 __gt__ 
  43:ac:7f    POP_JUMP_IF_TRUE -84
  b2          LOAD_FAST 2 
  63          RETURN_VALUE 
  children: []
simple_name: uart_read
  raw bytecode: 100 32:22:7f:81:46:81:37:80:37:28:24:24:29:29:29:2d:28:27:28:12:81:4e:23:02:34:01:c2:b0:b2:81:56:b1:b2:82:56:12:81:48:14:7c:b2:36:01:59:12:81:4e:b1:84:f2:34:01:c2:12:81:48:14:7d:b2:36:01:59:12:79:b2:34:01:b2:b1:83:f2:55:dc:44:57:12:81:54:23:03:34:01:59:12:81:54:b2:34:01:59:12:81:4e:23:04:34:01:63:b2:63
  prelude: (7, 0, 0, 2, 0, 0)
  args: ['addr', 'count']
  line info: 80:37:28:24:24:29:29:29:2d:28:27:28
  12:81:4e    LOAD_GLOBAL bytearray
  23:02       LOAD_CONST_OBJ b'\x80\x00\x08'
  34:01       CALL_FUNCTION 1
  c2          STORE_FAST 2 
  b0          LOAD_FAST 0 
  b2          LOAD_FAST 2 
  81          LOAD_CONST_SMALL_INT 1 
  56          STORE_SUBSCR 
  b1          LOAD_FAST 1 
  b2          LOAD_FAST 2 
  82          LOAD_CONST_SMALL_INT 2 
  56          STORE_SUBSCR 
  12:81:48    LOAD_GLOBAL uart
  14:7c       LOAD_METHOD write
  b2          LOAD_FAST 2 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  12:81:4e    LOAD_GLOBAL bytearray
  b1          LOAD_FAST 1 
  84          LOAD_CONST_SMALL_INT 4 
  f2          BINARY_OP 27 __add__ 
  34:01       CALL_FUNCTION 1
  c2          STORE_FAST 2 
  12:81:48    LOAD_GLOBAL uart
  14:7d       LOAD_METHOD readinto
  b2          LOAD_FAST 2 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  12:79       LOAD_GLOBAL calc_checksum
  b2          LOAD_FAST 2 
  34:01       CALL_FUNCTION 1
  b2          LOAD_FAST 2 
  b1          LOAD_FAST 1 
  83          LOAD_CONST_SMALL_INT 3 
  f2          BINARY_OP 27 __add__ 
  55          LOAD_SUBSCR 
  dc          BINARY_OP 5 __ne__ 
  44:57       POP_JUMP_IF_FALSE 23
  12:81:54    LOAD_GLOBAL print
  23:03       LOAD_CONST_OBJ 'checksum error'
  34:01       CALL_FUNCTION 1
  59          POP_TOP 
  12:81:54    LOAD_GLOBAL print
  b2          LOAD_FAST 2 
  34:01       CALL_FUNCTION 1
  59          POP_TOP 
  12:81:4e    LOAD_GLOBAL bytearray
  23:04       LOAD_CONST_OBJ b'\x00'
  34:01       CALL_FUNCTION 1
  63          RETURN_VALUE 
  b2          LOAD_FAST 2 
  63          RETURN_VALUE 
  children: []
simple_name: uart_write
  raw bytecode: 140 3a:2a:81:00:81:46:81:52:80:45:2a:22:28:28:2d:27:28:2f:29:2a:2a:44:29:12:81:53:b1:34:01:80:d9:44:42:50:63:12:81:4e:23:05:34:01:c2:b2:14:81:01:b0:36:01:59:b2:14:81:01:12:81:53:b1:34:01:36:01:59:b2:14:7e:b1:36:01:59:b2:14:81:01:80:36:01:59:12:79:b2:34:01:b2:12:81:53:b2:34:01:81:f3:56:12:81:48:14:7c:b2:36:01:59:12:81:48:14:81:02:83:36:01:c3:12:81:53:b3:34:01:83:d9:44:44:b3:82:55:63:12:81:54:23:06:b3:34:02:59:50:63:51:63
  prelude: (8, 0, 0, 2, 0, 0)
  args: ['addr', 'data']
  line info: 80:45:2a:22:28:28:2d:27:28:2f:29:2a:2a:44:29
  12:81:53    LOAD_GLOBAL len
  b1          LOAD_FAST 1 
  34:01       CALL_FUNCTION 1
  80          LOAD_CONST_SMALL_INT 0 
  d9          BINARY_OP 2 __eq__ 
  44:42       POP_JUMP_IF_FALSE 2
  50          LOAD_CONST_FALSE 
  63          RETURN_VALUE 
  12:81:4e    LOAD_GLOBAL bytearray
  23:05       LOAD_CONST_OBJ b'\x90'
  34:01       CALL_FUNCTION 1
  c2          STORE_FAST 2 
  b2          LOAD_FAST 2 
  14:81:01    LOAD_METHOD append
  b0          LOAD_FAST 0 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  b2          LOAD_FAST 2 
  14:81:01    LOAD_METHOD append
  12:81:53    LOAD_GLOBAL len
  b1          LOAD_FAST 1 
  34:01       CALL_FUNCTION 1
  36:01       CALL_METHOD 1
  59          POP_TOP 
  b2          LOAD_FAST 2 
  14:7e       LOAD_METHOD extend
  b1          LOAD_FAST 1 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  b2          LOAD_FAST 2 
  14:81:01    LOAD_METHOD append
  80          LOAD_CONST_SMALL_INT 0 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  12:79       LOAD_GLOBAL calc_checksum
  b2          LOAD_FAST 2 
  34:01       CALL_FUNCTION 1
  b2          LOAD_FAST 2 
  12:81:53    LOAD_GLOBAL len
  b2          LOAD_FAST 2 
  34:01       CALL_FUNCTION 1
  81          LOAD_CONST_SMALL_INT 1 
  f3          BINARY_OP 28 __sub__ 
  56          STORE_SUBSCR 
  12:81:48    LOAD_GLOBAL uart
  14:7c       LOAD_METHOD write
  b2          LOAD_FAST 2 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  12:81:48    LOAD_GLOBAL uart
  14:81:02    LOAD_METHOD read
  83          LOAD_CONST_SMALL_INT 3 
  36:01       CALL_METHOD 1
  c3          STORE_FAST 3 
  12:81:53    LOAD_GLOBAL len
  b3          LOAD_FAST 3 
  34:01       CALL_FUNCTION 1
  83          LOAD_CONST_SMALL_INT 3 
  d9          BINARY_OP 2 __eq__ 
  44:44       POP_JUMP_IF_FALSE 4
  b3          LOAD_FAST 3 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  63          RETURN_VALUE 
  12:81:54    LOAD_GLOBAL print
  23:06       LOAD_CONST_OBJ 'write error: '
  b3          LOAD_FAST 3 
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  50          LOAD_CONST_FALSE 
  63          RETURN_VALUE 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: uart_write_buf
  raw bytecode: 73 42:1a:81:03:81:46:81:52:80:57:2a:22:28:22:29:12:81:53:b1:34:01:80:d9:44:42:50:63:12:81:00:b0:b1:34:02:c2:42:58:12:08:14:81:04:8a:36:01:59:b2:12:81:00:b0:b1:b2:51:2e:02:55:34:02:e5:c2:b2:12:81:53:b1:34:01:d7:43:1e:51:63
  prelude: (9, 0, 0, 2, 0, 0)
  args: ['addr', 'data']
  line info: 80:57:2a:22:28:22:29
  12:81:53    LOAD_GLOBAL len
  b1          LOAD_FAST 1 
  34:01       CALL_FUNCTION 1
  80          LOAD_CONST_SMALL_INT 0 
  d9          BINARY_OP 2 __eq__ 
  44:42       POP_JUMP_IF_FALSE 2
  50          LOAD_CONST_FALSE 
  63          RETURN_VALUE 
  12:81:00    LOAD_GLOBAL uart_write
  b0          LOAD_FAST 0 
  b1          LOAD_FAST 1 
  34:02       CALL_FUNCTION 2
  c2          STORE_FAST 2 
  42:58       JUMP 24
  12:08       LOAD_GLOBAL time
  14:81:04    LOAD_METHOD sleep_ms
  8a          LOAD_CONST_SMALL_INT 10 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  b2          LOAD_FAST 2 
  12:81:00    LOAD_GLOBAL uart_write
  b0          LOAD_FAST 0 
  b1          LOAD_FAST 1 
  b2          LOAD_FAST 2 
  51          LOAD_CONST_NONE 
  2e:02       BUILD_SLICE 2
  55          LOAD_SUBSCR 
  34:02       CALL_FUNCTION 2
  e5          BINARY_OP 14 __iadd__ 
  c2          STORE_FAST 2 
  b2          LOAD_FAST 2 
  12:81:53    LOAD_GLOBAL len
  b1          LOAD_FAST 1 
  34:01       CALL_FUNCTION 1
  d7          BINARY_OP 0 __lt__ 
  43:1e       POP_JUMP_IF_TRUE -34
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: Clamp
  raw bytecode: 31 23:1a:81:05:12:81:55:81:56:80:60:25:22:25:22:b0:b2:d8:44:42:b2:63:b0:b1:d7:44:42:b1:63:b0:63
  prelude: (5, 0, 0, 3, 0, 0)
  args: ['value', 'min_value', 'max_value']
  line info: 80:60:25:22:25:22
  b0          LOAD_FAST 0 
  b2          LOAD_FAST 2 
  d8          BINARY_OP 1 __gt__ 
  44:42       POP_JUMP_IF_FALSE 2
  b2          LOAD_FAST 2 
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  b1          LOAD_FAST 1 
  d7          BINARY_OP 0 __lt__ 
  44:42       POP_JUMP_IF_FALSE 2
  b1          LOAD_FAST 1 
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  63          RETURN_VALUE 
  children: []
simple_name: average
  raw bytecode: 46 39:14:81:06:81:57:80:68:22:26:2f:29:80:c1:b0:80:42:4a:57:c2:b1:b0:b2:55:e5:c1:81:e5:58:5a:d7:43:31:59:59:b1:12:81:53:b0:34:01:f7:c1:b1:63
  prelude: (8, 0, 0, 1, 0, 0)
  args: ['nums']
  line info: 80:68:22:26:2f:29
  80          LOAD_CONST_SMALL_INT 0 
  c1          STORE_FAST 1 
  b0          LOAD_FAST 0 
  80          LOAD_CONST_SMALL_INT 0 
  42:4a       JUMP 10
  57          DUP_TOP 
  c2          STORE_FAST 2 
  b1          LOAD_FAST 1 
  b0          LOAD_FAST 0 
  b2          LOAD_FAST 2 
  55          LOAD_SUBSCR 
  e5          BINARY_OP 14 __iadd__ 
  c1          STORE_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  e5          BINARY_OP 14 __iadd__ 
  58          DUP_TOP_TWO 
  5a          ROT_TWO 
  d7          BINARY_OP 0 __lt__ 
  43:31       POP_JUMP_IF_TRUE -15
  59          POP_TOP 
  59          POP_TOP 
  b1          LOAD_FAST 1 
  12:81:53    LOAD_GLOBAL len
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  f7          BINARY_OP 32 __truediv__ 
  c1          STORE_FAST 1 
  b1          LOAD_FAST 1 
  63          RETURN_VALUE 
  children: []
simple_name: GetSysTime
  raw bytecode: 14 08:08:81:07:80:70:12:08:14:81:08:36:00:63
  prelude: (2, 0, 0, 0, 0, 0)
  args: []
  line info: 80:70
  12:08       LOAD_GLOBAL time
  14:81:08    LOAD_METHOD ticks_ms
  36:00       CALL_METHOD 0
  63          RETURN_VALUE 
  children: []
simple_name: GetAccelerationRaw
  raw bytecode: 220 38:28:81:09:80:74:26:27:2c:2e:2e:31:28:2e:33:2e:30:25:2a:33:25:30:80:2b:01:83:f4:c0:12:81:46:92:d9:44:79:12:81:45:14:81:0a:92:81:86:36:03:c1:b1:81:55:22:82:00:f4:b1:80:55:f2:b0:80:56:b1:83:55:22:82:00:f4:b1:82:55:f2:b0:81:56:b1:85:55:22:82:00:f4:b1:84:55:f2:b0:82:56:42:c7:80:12:81:46:98:d9:44:bf:80:12:81:45:14:81:0a:98:22:81:28:86:36:03:c1:22:84:80:00:b1:83:55:22:82:00:f4:f3:b1:82:55:f3:b0:80:56:b1:81:55:22:82:00:f4:b1:80:55:f2:b0:81:56:b1:85:55:22:82:00:f4:b1:84:55:f2:b0:82:56:42:40:80:42:59:57:c2:b0:b2:55:22:81:ff:7f:d8:44:4b:b0:b2:55:22:84:80:00:f3:b0:b2:56:81:e5:57:83:d7:43:22:59:80:42:4c:57:c2:b0:b2:55:84:f1:b0:b2:56:81:e5:57:83:d7:43:2f:59:b0:63
  prelude: (8, 0, 0, 0, 0, 0)
  args: []
  line info: 80:74:26:27:2c:2e:2e:31:28:2e:33:2e:30:25:2a:33:25:30
  80          LOAD_CONST_SMALL_INT 0 
  2b:01       BUILD_LIST 1
  83          LOAD_CONST_SMALL_INT 3 
  f4          BINARY_OP 29 __mul__ 
  c0          STORE_FAST 0 
  12:81:46    LOAD_GLOBAL addr
  92          LOAD_CONST_SMALL_INT 18 
  d9          BINARY_OP 2 __eq__ 
  44:79       POP_JUMP_IF_FALSE 57
  12:81:45    LOAD_GLOBAL i2c
  14:81:0a    LOAD_METHOD readfrom_mem
  92          LOAD_CONST_SMALL_INT 18 
  81          LOAD_CONST_SMALL_INT 1 
  86          LOAD_CONST_SMALL_INT 6 
  36:03       CALL_METHOD 3
  c1          STORE_FAST 1 
  b1          LOAD_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  55          LOAD_SUBSCR 
  22:82:00    LOAD_CONST_SMALL_INT 256
  f4          BINARY_OP 29 __mul__ 
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  f2          BINARY_OP 27 __add__ 
  b0          LOAD_FAST 0 
  80          LOAD_CONST_SMALL_INT 0 
  56          STORE_SUBSCR 
  b1          LOAD_FAST 1 
  83          LOAD_CONST_SMALL_INT 3 
  55          LOAD_SUBSCR 
  22:82:00    LOAD_CONST_SMALL_INT 256
  f4          BINARY_OP 29 __mul__ 
  b1          LOAD_FAST 1 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  f2          BINARY_OP 27 __add__ 
  b0          LOAD_FAST 0 
  81          LOAD_CONST_SMALL_INT 1 
  56          STORE_SUBSCR 
  b1          LOAD_FAST 1 
  85          LOAD_CONST_SMALL_INT 5 
  55          LOAD_SUBSCR 
  22:82:00    LOAD_CONST_SMALL_INT 256
  f4          BINARY_OP 29 __mul__ 
  b1          LOAD_FAST 1 
  84          LOAD_CONST_SMALL_INT 4 
  55          LOAD_SUBSCR 
  f2          BINARY_OP 27 __add__ 
  b0          LOAD_FAST 0 
  82          LOAD_CONST_SMALL_INT 2 
  56          STORE_SUBSCR 
  42:c7:80    JUMP 71
  12:81:46    LOAD_GLOBAL addr
  98          LOAD_CONST_SMALL_INT 24 
  d9          BINARY_OP 2 __eq__ 
  44:bf:80    POP_JUMP_IF_FALSE 63
  12:81:45    LOAD_GLOBAL i2c
  14:81:0a    LOAD_METHOD readfrom_mem
  98          LOAD_CONST_SMALL_INT 24 
  22:81:28    LOAD_CONST_SMALL_INT 168
  86          LOAD_CONST_SMALL_INT 6 
  36:03       CALL_METHOD 3
  c1          STORE_FAST 1 
  22:84:80:00 LOAD_CONST_SMALL_INT 65536
  b1          LOAD_FAST 1 
  83          LOAD_CONST_SMALL_INT 3 
  55          LOAD_SUBSCR 
  22:82:00    LOAD_CONST_SMALL_INT 256
  f4          BINARY_OP 29 __mul__ 
  f3          BINARY_OP 28 __sub__ 
  b1          LOAD_FAST 1 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  f3          BINARY_OP 28 __sub__ 
  b0          LOAD_FAST 0 
  80          LOAD_CONST_SMALL_INT 0 
  56          STORE_SUBSCR 
  b1          LOAD_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  55          LOAD_SUBSCR 
  22:82:00    LOAD_CONST_SMALL_INT 256
  f4          BINARY_OP 29 __mul__ 
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  f2          BINARY_OP 27 __add__ 
  b0          LOAD_FAST 0 
  81          LOAD_CONST_SMALL_INT 1 
  56          STORE_SUBSCR 
  b1          LOAD_FAST 1 
  85          LOAD_CONST_SMALL_INT 5 
  55          LOAD_SUBSCR 
  22:82:00    LOAD_CONST_SMALL_INT 256
  f4          BINARY_OP 29 __mul__ 
  b1          LOAD_FAST 1 
  84          LOAD_CONST_SMALL_INT 4 
  55          LOAD_SUBSCR 
  f2          BINARY_OP 27 __add__ 
  b0          LOAD_FAST 0 
  82          LOAD_CONST_SMALL_INT 2 
  56          STORE_SUBSCR 
  42:40       JUMP 0
  80          LOAD_CONST_SMALL_INT 0 
  42:59       JUMP 25
  57          DUP_TOP 
  c2          STORE_FAST 2 
  b0          LOAD_FAST 0 
  b2          LOAD_FAST 2 
  55          LOAD_SUBSCR 
  22:81:ff:7f LOAD_CONST_SMALL_INT 32767
  d8          BINARY_OP 1 __gt__ 
  44:4b       POP_JUMP_IF_FALSE 11
  b0          LOAD_FAST 0 
  b2          LOAD_FAST 2 
  55          LOAD_SUBSCR 
  22:84:80:00 LOAD_CONST_SMALL_INT 65536
  f3          BINARY_OP 28 __sub__ 
  b0          LOAD_FAST 0 
  b2          LOAD_FAST 2 
  56          STORE_SUBSCR 
  81          LOAD_CONST_SMALL_INT 1 
  e5          BINARY_OP 14 __iadd__ 
  57          DUP_TOP 
  83          LOAD_CONST_SMALL_INT 3 
  d7          BINARY_OP 0 __lt__ 
  43:22       POP_JUMP_IF_TRUE -30
  59          POP_TOP 
  80          LOAD_CONST_SMALL_INT 0 
  42:4c       JUMP 12
  57          DUP_TOP 
  c2          STORE_FAST 2 
  b0          LOAD_FAST 0 
  b2          LOAD_FAST 2 
  55          LOAD_SUBSCR 
  84          LOAD_CONST_SMALL_INT 4 
  f1          BINARY_OP 26 __rshift__ 
  b0          LOAD_FAST 0 
  b2          LOAD_FAST 2 
  56          STORE_SUBSCR 
  81          LOAD_CONST_SMALL_INT 1 
  e5          BINARY_OP 14 __iadd__ 
  57          DUP_TOP 
  83          LOAD_CONST_SMALL_INT 3 
  d7          BINARY_OP 0 __lt__ 
  43:2f       POP_JUMP_IF_TRUE -17
  59          POP_TOP 
  b0          LOAD_FAST 0 
  63          RETURN_VALUE 
  children: []
simple_name: GetAcceleration
  raw bytecode: 64 41:12:81:0b:81:58:80:89:26:25:44:12:81:09:34:00:c1:b0:83:d7:44:44:b1:b0:55:63:12:81:59:12:09:14:81:0c:b1:80:55:b1:80:55:f4:b1:81:55:b1:81:55:f4:f2:b1:82:55:b1:82:55:f4:f2:36:01:34:01:63:51:63
  prelude: (9, 0, 0, 1, 0, 0)
  args: ['axial']
  line info: 80:89:26:25:44
  12:81:09    LOAD_GLOBAL GetAccelerationRaw
  34:00       CALL_FUNCTION 0
  c1          STORE_FAST 1 
  b0          LOAD_FAST 0 
  83          LOAD_CONST_SMALL_INT 3 
  d7          BINARY_OP 0 __lt__ 
  44:44       POP_JUMP_IF_FALSE 4
  b1          LOAD_FAST 1 
  b0          LOAD_FAST 0 
  55          LOAD_SUBSCR 
  63          RETURN_VALUE 
  12:81:59    LOAD_GLOBAL round
  12:09       LOAD_GLOBAL math
  14:81:0c    LOAD_METHOD sqrt
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  f4          BINARY_OP 29 __mul__ 
  b1          LOAD_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  55          LOAD_SUBSCR 
  b1          LOAD_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  55          LOAD_SUBSCR 
  f4          BINARY_OP 29 __mul__ 
  f2          BINARY_OP 27 __add__ 
  b1          LOAD_FAST 1 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  b1          LOAD_FAST 1 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  f4          BINARY_OP 29 __mul__ 
  f2          BINARY_OP 27 __add__ 
  36:01       CALL_METHOD 1
  34:01       CALL_FUNCTION 1
  63          RETURN_VALUE 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: ReadPin
  raw bytecode: 33 19:0e:81:0d:81:5a:80:91:2e:12:05:b0:12:05:13:13:34:02:12:81:47:b0:56:12:81:47:b0:55:14:12:36:00:63
  prelude: (4, 0, 0, 1, 0, 0)
  args: ['pin_port']
  line info: 80:91:2e
  12:05       LOAD_GLOBAL Pin
  b0          LOAD_FAST 0 
  12:05       LOAD_GLOBAL Pin
  13:13       LOAD_ATTR IN
  34:02       CALL_FUNCTION 2
  12:81:47    LOAD_GLOBAL pin_map
  b0          LOAD_FAST 0 
  56          STORE_SUBSCR 
  12:81:47    LOAD_GLOBAL pin_map
  b0          LOAD_FAST 0 
  55          LOAD_SUBSCR 
  14:12       LOAD_METHOD value
  36:00       CALL_METHOD 0
  63          RETURN_VALUE 
  children: []
simple_name: WritePin
  raw bytecode: 37 22:10:81:0e:81:5a:12:80:96:2e:12:05:b0:12:05:13:11:34:02:12:81:47:b0:56:12:81:47:b0:55:14:12:b1:36:01:59:51:63
  prelude: (5, 0, 0, 2, 0, 0)
  args: ['pin_port', 'value']
  line info: 80:96:2e
  12:05       LOAD_GLOBAL Pin
  b0          LOAD_FAST 0 
  12:05       LOAD_GLOBAL Pin
  13:11       LOAD_ATTR OUT
  34:02       CALL_FUNCTION 2
  12:81:47    LOAD_GLOBAL pin_map
  b0          LOAD_FAST 0 
  56          STORE_SUBSCR 
  12:81:47    LOAD_GLOBAL pin_map
  b0          LOAD_FAST 0 
  55          LOAD_SUBSCR 
  14:12       LOAD_METHOD value
  b1          LOAD_FAST 1 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: ReadAdc
  raw bytecode: 58 29:16:81:0f:81:5a:80:9b:2a:2a:2c:27:24:12:05:b0:34:01:12:81:47:b0:56:12:02:12:81:47:b0:55:34:01:c1:b1:14:81:10:12:02:13:81:11:36:01:59:b1:14:81:12:36:00:c2:b2:86:f1:c2:b2:63
  prelude: (6, 0, 0, 1, 0, 0)
  args: ['pin_port']
  line info: 80:9b:2a:2a:2c:27:24
  12:05       LOAD_GLOBAL Pin
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  12:81:47    LOAD_GLOBAL pin_map
  b0          LOAD_FAST 0 
  56          STORE_SUBSCR 
  12:02       LOAD_GLOBAL ADC
  12:81:47    LOAD_GLOBAL pin_map
  b0          LOAD_FAST 0 
  55          LOAD_SUBSCR 
  34:01       CALL_FUNCTION 1
  c1          STORE_FAST 1 
  b1          LOAD_FAST 1 
  14:81:10    LOAD_METHOD atten
  12:02       LOAD_GLOBAL ADC
  13:81:11    LOAD_ATTR ATTN_11DB
  36:01       CALL_METHOD 1
  59          POP_TOP 
  b1          LOAD_FAST 1 
  14:81:12    LOAD_METHOD read_u16
  36:00       CALL_METHOD 0
  c2          STORE_FAST 2 
  b2          LOAD_FAST 2 
  86          LOAD_CONST_SMALL_INT 6 
  f1          BINARY_OP 26 __rshift__ 
  c2          STORE_FAST 2 
  b2          LOAD_FAST 2 
  63          RETURN_VALUE 
  children: []
simple_name: WritePwm
  raw bytecode: 82 32:1a:81:13:81:5a:12:80:a4:2a:2a:27:2a:29:2b:12:05:b0:34:01:12:81:47:b0:56:12:04:12:81:47:b0:55:34:01:c2:b2:14:81:14:36:00:59:12:04:12:81:47:b0:55:34:01:c2:b2:14:0d:22:87:68:36:01:59:12:81:05:b1:80:22:87:7f:34:03:c1:b2:14:81:15:b1:36:01:59:51:63
  prelude: (7, 0, 0, 2, 0, 0)
  args: ['pin_port', 'value']
  line info: 80:a4:2a:2a:27:2a:29:2b
  12:05       LOAD_GLOBAL Pin
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  12:81:47    LOAD_GLOBAL pin_map
  b0          LOAD_FAST 0 
  56          STORE_SUBSCR 
  12:04       LOAD_GLOBAL PWM
  12:81:47    LOAD_GLOBAL pin_map
  b0          LOAD_FAST 0 
  55          LOAD_SUBSCR 
  34:01       CALL_FUNCTION 1
  c2          STORE_FAST 2 
  b2          LOAD_FAST 2 
  14:81:14    LOAD_METHOD deinit
  36:00       CALL_METHOD 0
  59          POP_TOP 
  12:04       LOAD_GLOBAL PWM
  12:81:47    LOAD_GLOBAL pin_map
  b0          LOAD_FAST 0 
  55          LOAD_SUBSCR 
  34:01       CALL_FUNCTION 1
  c2          STORE_FAST 2 
  b2          LOAD_FAST 2 
  14:0d       LOAD_METHOD freq
  22:87:68    LOAD_CONST_SMALL_INT 1000
  36:01       CALL_METHOD 1
  59          POP_TOP 
  12:81:05    LOAD_GLOBAL Clamp
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  22:87:7f    LOAD_CONST_SMALL_INT 1023
  34:03       CALL_FUNCTION 3
  c1          STORE_FAST 1 
  b2          LOAD_FAST 2 
  14:81:15    LOAD_METHOD duty
  b1          LOAD_FAST 1 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: UpdateButtonStatus
  raw bytecode: 81 10:14:81:16:80:b3:20:20:20:2c:2c:2c:12:81:47:8a:55:14:12:36:00:17:81:49:12:81:47:94:55:14:12:36:00:17:81:4a:12:81:47:95:55:14:12:36:00:17:81:4b:12:81:5b:12:81:49:34:01:10:64:f2:12:81:5b:12:81:4a:34:01:f2:10:64:f2:12:81:5b:12:81:4b:34:01:f2:63
  prelude: (3, 0, 0, 0, 0, 0)
  args: []
  line info: 80:b3:20:20:20:2c:2c:2c
  12:81:47    LOAD_GLOBAL pin_map
  8a          LOAD_CONST_SMALL_INT 10 
  55          LOAD_SUBSCR 
  14:12       LOAD_METHOD value
  36:00       CALL_METHOD 0
  17:81:49    STORE_GLOBAL pa_last_status
  12:81:47    LOAD_GLOBAL pin_map
  94          LOAD_CONST_SMALL_INT 20 
  55          LOAD_SUBSCR 
  14:12       LOAD_METHOD value
  36:00       CALL_METHOD 0
  17:81:4a    STORE_GLOBAL pb_last_status
  12:81:47    LOAD_GLOBAL pin_map
  95          LOAD_CONST_SMALL_INT 21 
  55          LOAD_SUBSCR 
  14:12       LOAD_METHOD value
  36:00       CALL_METHOD 0
  17:81:4b    STORE_GLOBAL pc_last_status
  12:81:5b    LOAD_GLOBAL str
  12:81:49    LOAD_GLOBAL pa_last_status
  34:01       CALL_FUNCTION 1
  10:64       LOAD_CONST_STRING _
  f2          BINARY_OP 27 __add__ 
  12:81:5b    LOAD_GLOBAL str
  12:81:4a    LOAD_GLOBAL pb_last_status
  34:01       CALL_FUNCTION 1
  f2          BINARY_OP 27 __add__ 
  10:64       LOAD_CONST_STRING _
  f2          BINARY_OP 27 __add__ 
  12:81:5b    LOAD_GLOBAL str
  12:81:4b    LOAD_GLOBAL pc_last_status
  34:01       CALL_FUNCTION 1
  f2          BINARY_OP 27 __add__ 
  63          RETURN_VALUE 
  children: []
simple_name: GetLastPinStatus
  raw bytecode: 43 11:18:81:17:81:5a:80:bd:25:24:25:24:25:24:b0:8a:d9:44:44:12:81:49:63:b0:94:d9:44:44:12:81:4a:63:b0:95:d9:44:44:12:81:4b:63:80:63
  prelude: (3, 0, 0, 1, 0, 0)
  args: ['pin_port']
  line info: 80:bd:25:24:25:24:25:24
  b0          LOAD_FAST 0 
  8a          LOAD_CONST_SMALL_INT 10 
  d9          BINARY_OP 2 __eq__ 
  44:44       POP_JUMP_IF_FALSE 4
  12:81:49    LOAD_GLOBAL pa_last_status
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  94          LOAD_CONST_SMALL_INT 20 
  d9          BINARY_OP 2 __eq__ 
  44:44       POP_JUMP_IF_FALSE 4
  12:81:4a    LOAD_GLOBAL pb_last_status
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  95          LOAD_CONST_SMALL_INT 21 
  d9          BINARY_OP 2 __eq__ 
  44:44       POP_JUMP_IF_FALSE 4
  12:81:4b    LOAD_GLOBAL pc_last_status
  63          RETURN_VALUE 
  80          LOAD_CONST_SMALL_INT 0 
  63          RETURN_VALUE 
  children: []
simple_name: PlayRecordMission
  raw bytecode: 68 08:1c:19:8b:cd:89:16:65:85:0e:85:2c:85:19:85:07:11:81:5c:16:81:5d:10:19:16:81:5e:85:2a:01:53:33:00:16:81:32:32:01:16:81:1b:32:02:16:81:19:32:03:16:81:43:32:04:16:81:44:32:05:16:81:42:32:06:16:81:1c:51:63
  prelude: (2, 0, 0, 0, 0, 0)
  args: []
  line info: 8b:cd:89:16:65:85:0e:85:2c:85:19:85:07
  11:81:5c    LOAD_NAME __name__
  16:81:5d    STORE_NAME __module__
  10:19       LOAD_CONST_STRING PlayRecordMission
  16:81:5e    STORE_NAME __qualname__
  85          LOAD_CONST_SMALL_INT 5 
  2a:01       BUILD_TUPLE 1
  53          LOAD_NULL 
  33:00       MAKE_FUNCTION_DEFARGS 0
  16:81:32    STORE_NAME __init__
  32:01       MAKE_FUNCTION 1
  16:81:1b    STORE_NAME isFinish
  32:02       MAKE_FUNCTION 2
  16:81:19    STORE_NAME interrupt
  32:03       MAKE_FUNCTION 3
  16:81:43    STORE_NAME __tickRecord
  32:04       MAKE_FUNCTION 4
  16:81:44    STORE_NAME __tickPlay
  32:05       MAKE_FUNCTION 5
  16:81:42    STORE_NAME __stop
  32:06       MAKE_FUNCTION 6
  16:81:1c    STORE_NAME tickStep
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: ['__init__', 'isFinish', 'interrupt', '__tickRecord', '__tickPlay', '__stop', 'tickStep']
simple_name: __init__
  raw bytecode: 169 a8:05:3c:81:32:81:6e:81:6f:81:60:81:61:80:ce:25:25:25:25:47:25:25:27:25:2c:25:26:27:25:2a:2c:2b:2c:b1:b0:18:81:25:b2:b0:18:81:33:b2:b0:18:81:34:b3:94:d7:44:47:b3:b0:18:81:35:42:45:94:b0:18:81:35:80:b0:18:81:36:22:81:48:b0:18:81:37:80:b0:18:81:38:12:81:4e:22:81:48:34:01:b0:18:81:39:51:b0:18:81:3a:b0:13:81:25:44:7e:b3:86:f4:b0:18:81:3b:80:b0:18:81:3c:12:81:4e:83:34:01:b0:18:81:3d:12:81:4e:22:81:4a:34:01:b0:18:81:3e:12:81:4e:23:08:34:01:b0:18:81:3f:12:81:4e:22:a0:00:34:01:b0:18:81:40:50:b0:18:81:41:51:63
  prelude: (6, 0, 0, 4, 0, 1)
  args: ['self', 'is_recording', 'file_name', 'sec']
  line info: 80:ce:25:25:25:25:47:25:25:27:25:2c:25:26:27:25:2a:2c:2b:2c
  b1          LOAD_FAST 1 
  b0          LOAD_FAST 0 
  18:81:25    STORE_ATTR isRecord
  b2          LOAD_FAST 2 
  b0          LOAD_FAST 0 
  18:81:33    STORE_ATTR fileName
  b2          LOAD_FAST 2 
  b0          LOAD_FAST 0 
  18:81:34    STORE_ATTR currentFileName
  b3          LOAD_FAST 3 
  94          LOAD_CONST_SMALL_INT 20 
  d7          BINARY_OP 0 __lt__ 
  44:47       POP_JUMP_IF_FALSE 7
  b3          LOAD_FAST 3 
  b0          LOAD_FAST 0 
  18:81:35    STORE_ATTR recordSec
  42:45       JUMP 5
  94          LOAD_CONST_SMALL_INT 20 
  b0          LOAD_FAST 0 
  18:81:35    STORE_ATTR recordSec
  80          LOAD_CONST_SMALL_INT 0 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  22:81:48    LOAD_CONST_SMALL_INT 200
  b0          LOAD_FAST 0 
  18:81:37    STORE_ATTR count
  80          LOAD_CONST_SMALL_INT 0 
  b0          LOAD_FAST 0 
  18:81:38    STORE_ATTR read_len
  12:81:4e    LOAD_GLOBAL bytearray
  22:81:48    LOAD_CONST_SMALL_INT 200
  34:01       CALL_FUNCTION 1
  b0          LOAD_FAST 0 
  18:81:39    STORE_ATTR playing_buf
  51          LOAD_CONST_NONE 
  b0          LOAD_FAST 0 
  18:81:3a    STORE_ATTR file
  b0          LOAD_FAST 0 
  13:81:25    LOAD_ATTR isRecord
  44:7e       POP_JUMP_IF_FALSE 62
  b3          LOAD_FAST 3 
  86          LOAD_CONST_SMALL_INT 6 
  f4          BINARY_OP 29 __mul__ 
  b0          LOAD_FAST 0 
  18:81:3b    STORE_ATTR recordingBufCnt
  80          LOAD_CONST_SMALL_INT 0 
  b0          LOAD_FAST 0 
  18:81:3c    STORE_ATTR recordingUartReadLen
  12:81:4e    LOAD_GLOBAL bytearray
  83          LOAD_CONST_SMALL_INT 3 
  34:01       CALL_FUNCTION 1
  b0          LOAD_FAST 0 
  18:81:3d    STORE_ATTR byte_read
  12:81:4e    LOAD_GLOBAL bytearray
  22:81:4a    LOAD_CONST_SMALL_INT 202
  34:01       CALL_FUNCTION 1
  b0          LOAD_FAST 0 
  18:81:3e    STORE_ATTR uart_buf
  12:81:4e    LOAD_GLOBAL bytearray
  23:08       LOAD_CONST_OBJ b'\x80\x11\x08'
  34:01       CALL_FUNCTION 1
  b0          LOAD_FAST 0 
  18:81:3f    STORE_ATTR byte_to_write
  12:81:4e    LOAD_GLOBAL bytearray
  22:a0:00    LOAD_CONST_SMALL_INT 4096
  34:01       CALL_FUNCTION 1
  b0          LOAD_FAST 0 
  18:81:40    STORE_ATTR rec_buf
  50          LOAD_CONST_FALSE 
  b0          LOAD_FAST 0 
  18:81:41    STORE_ATTR already_write
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: isFinish
  raw bytecode: 15 11:0c:81:1b:81:6e:80:e4:b0:13:81:36:84:d9:63
  prelude: (3, 0, 0, 1, 0, 0)
  args: ['self']
  line info: 80:e4
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  84          LOAD_CONST_SMALL_INT 4 
  d9          BINARY_OP 2 __eq__ 
  63          RETURN_VALUE 
  children: []
simple_name: interrupt
  raw bytecode: 99 11:20:81:19:81:6e:80:e7:27:28:25:22:26:28:27:30:25:4a:b0:14:81:42:36:00:59:b0:13:81:36:80:d9:44:47:84:b0:18:81:36:51:63:b0:13:81:25:44:6e:b0:13:81:36:83:d9:44:47:84:b0:18:81:36:42:5d:b0:13:81:36:82:d9:43:48:b0:13:81:36:81:d9:44:4d:83:b0:18:81:36:23:09:b0:18:81:34:42:40:42:45:84:b0:18:81:36:51:63
  prelude: (3, 0, 0, 1, 0, 0)
  args: ['self']
  line info: 80:e7:27:28:25:22:26:28:27:30:25:4a
  b0          LOAD_FAST 0 
  14:81:42    LOAD_METHOD __stop
  36:00       CALL_METHOD 0
  59          POP_TOP 
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  80          LOAD_CONST_SMALL_INT 0 
  d9          BINARY_OP 2 __eq__ 
  44:47       POP_JUMP_IF_FALSE 7
  84          LOAD_CONST_SMALL_INT 4 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  13:81:25    LOAD_ATTR isRecord
  44:6e       POP_JUMP_IF_FALSE 46
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  83          LOAD_CONST_SMALL_INT 3 
  d9          BINARY_OP 2 __eq__ 
  44:47       POP_JUMP_IF_FALSE 7
  84          LOAD_CONST_SMALL_INT 4 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  42:5d       JUMP 29
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  82          LOAD_CONST_SMALL_INT 2 
  d9          BINARY_OP 2 __eq__ 
  43:48       POP_JUMP_IF_TRUE 8
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  81          LOAD_CONST_SMALL_INT 1 
  d9          BINARY_OP 2 __eq__ 
  44:4d       POP_JUMP_IF_FALSE 13
  83          LOAD_CONST_SMALL_INT 3 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  23:09       LOAD_CONST_OBJ 'record_end.dat'
  b0          LOAD_FAST 0 
  18:81:34    STORE_ATTR currentFileName
  42:40       JUMP 0
  42:45       JUMP 5
  84          LOAD_CONST_SMALL_INT 4 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: __tickRecord
  raw bytecode: 439 39:5e:81:43:81:6e:80:f5:28:2f:2f:31:35:2a:27:26:2d:25:23:24:28:25:27:2c:2c:25:29:36:2a:29:20:1f:23:25:22:2a:28:2e:30:2f:2a:25:25:22:42:2f:2a:25:25:b0:13:81:3a:51:de:44:5e:12:81:63:b0:13:81:34:10:3b:34:02:b0:18:81:3a:12:81:00:90:12:81:4e:81:2b:01:34:01:34:02:59:b0:13:81:3b:80:d8:43:49:b0:13:81:3c:80:d8:44:a8:82:b0:13:81:3c:80:57:5b:da:46:07:b0:13:81:3b:d7:42:42:5a:59:44:69:b0:13:81:3b:81:f3:b0:18:81:3b:22:a0:00:b0:18:81:3c:b0:13:81:41:44:4d:b0:13:81:3a:14:7c:b0:13:81:40:36:01:59:50:b0:18:81:41:42:a7:81:22:81:48:c1:b0:13:81:3c:b1:d7:44:45:b0:13:81:3c:c1:b1:b0:13:81:3f:82:56:12:81:48:14:7c:b0:13:81:3f:36:01:59:12:81:48:14:7d:b0:13:81:3d:36:01:c2:b2:83:dc:44:49:12:81:54:10:81:27:34:01:59:12:81:48:14:7d:b0:13:81:3e:b0:13:81:3d:82:55:81:f2:36:02:81:f3:c2:b2:b0:13:81:3d:82:55:dc:44:49:12:81:54:10:81:28:34:01:59:b0:13:81:3e:80:b2:2e:02:55:b0:13:81:40:22:a0:00:b0:13:81:3c:f3:22:a0:00:b0:13:81:3c:f3:b2:f2:2e:02:56:b1:b2:dc:44:42:42:60:b0:13:81:3c:b2:f3:b0:18:81:3c:b0:13:81:3c:80:da:44:45:52:b0:18:81:41:b0:13:81:3c:80:d8:43:d0:7e:b0:13:81:3c:80:da:44:6d:b0:13:81:3b:80:da:44:65:12:81:00:90:12:81:4e:80:2b:01:34:01:34:02:59:b0:13:81:3a:14:81:21:36:00:59:51:b0:18:81:3a:50:b0:18:81:41:52:63:50:63:12:81:00:90:12:81:4e:80:2b:01:34:01:34:02:59:b0:13:81:3a:14:81:21:36:00:59:51:b0:18:81:3a:50:b0:18:81:41:52:63:51:63
  prelude: (8, 0, 0, 1, 0, 0)
  args: ['self']
  line info: 80:f5:28:2f:2f:31:35:2a:27:26:2d:25:23:24:28:25:27:2c:2c:25:29:36:2a:29:20:1f:23:25:22:2a:28:2e:30:2f:2a:25:25:22:42:2f:2a:25:25
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  51          LOAD_CONST_NONE 
  de          BINARY_OP 7 <is> 
  44:5e       POP_JUMP_IF_FALSE 30
  12:81:63    LOAD_GLOBAL open
  b0          LOAD_FAST 0 
  13:81:34    LOAD_ATTR currentFileName
  10:3b       LOAD_CONST_STRING w
  34:02       CALL_FUNCTION 2
  b0          LOAD_FAST 0 
  18:81:3a    STORE_ATTR file
  12:81:00    LOAD_GLOBAL uart_write
  90          LOAD_CONST_SMALL_INT 16 
  12:81:4e    LOAD_GLOBAL bytearray
  81          LOAD_CONST_SMALL_INT 1 
  2b:01       BUILD_LIST 1
  34:01       CALL_FUNCTION 1
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  b0          LOAD_FAST 0 
  13:81:3b    LOAD_ATTR recordingBufCnt
  80          LOAD_CONST_SMALL_INT 0 
  d8          BINARY_OP 1 __gt__ 
  43:49       POP_JUMP_IF_TRUE 9
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  80          LOAD_CONST_SMALL_INT 0 
  d8          BINARY_OP 1 __gt__ 
  44:a8:82    POP_JUMP_IF_FALSE 296
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  80          LOAD_CONST_SMALL_INT 0 
  57          DUP_TOP 
  5b          ROT_THREE 
  da          BINARY_OP 3 __le__ 
  46:07       JUMP_IF_FALSE_OR_POP 7
  b0          LOAD_FAST 0 
  13:81:3b    LOAD_ATTR recordingBufCnt
  d7          BINARY_OP 0 __lt__ 
  42:42       JUMP 2
  5a          ROT_TWO 
  59          POP_TOP 
  44:69       POP_JUMP_IF_FALSE 41
  b0          LOAD_FAST 0 
  13:81:3b    LOAD_ATTR recordingBufCnt
  81          LOAD_CONST_SMALL_INT 1 
  f3          BINARY_OP 28 __sub__ 
  b0          LOAD_FAST 0 
  18:81:3b    STORE_ATTR recordingBufCnt
  22:a0:00    LOAD_CONST_SMALL_INT 4096
  b0          LOAD_FAST 0 
  18:81:3c    STORE_ATTR recordingUartReadLen
  b0          LOAD_FAST 0 
  13:81:41    LOAD_ATTR already_write
  44:4d       POP_JUMP_IF_FALSE 13
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  14:7c       LOAD_METHOD write
  b0          LOAD_FAST 0 
  13:81:40    LOAD_ATTR rec_buf
  36:01       CALL_METHOD 1
  59          POP_TOP 
  50          LOAD_CONST_FALSE 
  b0          LOAD_FAST 0 
  18:81:41    STORE_ATTR already_write
  42:a7:81    JUMP 167
  22:81:48    LOAD_CONST_SMALL_INT 200
  c1          STORE_FAST 1 
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  b1          LOAD_FAST 1 
  d7          BINARY_OP 0 __lt__ 
  44:45       POP_JUMP_IF_FALSE 5
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  c1          STORE_FAST 1 
  b1          LOAD_FAST 1 
  b0          LOAD_FAST 0 
  13:81:3f    LOAD_ATTR byte_to_write
  82          LOAD_CONST_SMALL_INT 2 
  56          STORE_SUBSCR 
  12:81:48    LOAD_GLOBAL uart
  14:7c       LOAD_METHOD write
  b0          LOAD_FAST 0 
  13:81:3f    LOAD_ATTR byte_to_write
  36:01       CALL_METHOD 1
  59          POP_TOP 
  12:81:48    LOAD_GLOBAL uart
  14:7d       LOAD_METHOD readinto
  b0          LOAD_FAST 0 
  13:81:3d    LOAD_ATTR byte_read
  36:01       CALL_METHOD 1
  c2          STORE_FAST 2 
  b2          LOAD_FAST 2 
  83          LOAD_CONST_SMALL_INT 3 
  dc          BINARY_OP 5 __ne__ 
  44:49       POP_JUMP_IF_FALSE 9
  12:81:54    LOAD_GLOBAL print
  10:81:27    LOAD_CONST_STRING err1
  34:01       CALL_FUNCTION 1
  59          POP_TOP 
  12:81:48    LOAD_GLOBAL uart
  14:7d       LOAD_METHOD readinto
  b0          LOAD_FAST 0 
  13:81:3e    LOAD_ATTR uart_buf
  b0          LOAD_FAST 0 
  13:81:3d    LOAD_ATTR byte_read
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  81          LOAD_CONST_SMALL_INT 1 
  f2          BINARY_OP 27 __add__ 
  36:02       CALL_METHOD 2
  81          LOAD_CONST_SMALL_INT 1 
  f3          BINARY_OP 28 __sub__ 
  c2          STORE_FAST 2 
  b2          LOAD_FAST 2 
  b0          LOAD_FAST 0 
  13:81:3d    LOAD_ATTR byte_read
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  dc          BINARY_OP 5 __ne__ 
  44:49       POP_JUMP_IF_FALSE 9
  12:81:54    LOAD_GLOBAL print
  10:81:28    LOAD_CONST_STRING err2
  34:01       CALL_FUNCTION 1
  59          POP_TOP 
  b0          LOAD_FAST 0 
  13:81:3e    LOAD_ATTR uart_buf
  80          LOAD_CONST_SMALL_INT 0 
  b2          LOAD_FAST 2 
  2e:02       BUILD_SLICE 2
  55          LOAD_SUBSCR 
  b0          LOAD_FAST 0 
  13:81:40    LOAD_ATTR rec_buf
  22:a0:00    LOAD_CONST_SMALL_INT 4096
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  f3          BINARY_OP 28 __sub__ 
  22:a0:00    LOAD_CONST_SMALL_INT 4096
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  f3          BINARY_OP 28 __sub__ 
  b2          LOAD_FAST 2 
  f2          BINARY_OP 27 __add__ 
  2e:02       BUILD_SLICE 2
  56          STORE_SUBSCR 
  b1          LOAD_FAST 1 
  b2          LOAD_FAST 2 
  dc          BINARY_OP 5 __ne__ 
  44:42       POP_JUMP_IF_FALSE 2
  42:60       JUMP 32
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  b2          LOAD_FAST 2 
  f3          BINARY_OP 28 __sub__ 
  b0          LOAD_FAST 0 
  18:81:3c    STORE_ATTR recordingUartReadLen
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  80          LOAD_CONST_SMALL_INT 0 
  da          BINARY_OP 3 __le__ 
  44:45       POP_JUMP_IF_FALSE 5
  52          LOAD_CONST_TRUE 
  b0          LOAD_FAST 0 
  18:81:41    STORE_ATTR already_write
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  80          LOAD_CONST_SMALL_INT 0 
  d8          BINARY_OP 1 __gt__ 
  43:d0:7e    POP_JUMP_IF_TRUE -176
  b0          LOAD_FAST 0 
  13:81:3c    LOAD_ATTR recordingUartReadLen
  80          LOAD_CONST_SMALL_INT 0 
  da          BINARY_OP 3 __le__ 
  44:6d       POP_JUMP_IF_FALSE 45
  b0          LOAD_FAST 0 
  13:81:3b    LOAD_ATTR recordingBufCnt
  80          LOAD_CONST_SMALL_INT 0 
  da          BINARY_OP 3 __le__ 
  44:65       POP_JUMP_IF_FALSE 37
  12:81:00    LOAD_GLOBAL uart_write
  90          LOAD_CONST_SMALL_INT 16 
  12:81:4e    LOAD_GLOBAL bytearray
  80          LOAD_CONST_SMALL_INT 0 
  2b:01       BUILD_LIST 1
  34:01       CALL_FUNCTION 1
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  14:81:21    LOAD_METHOD close
  36:00       CALL_METHOD 0
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  b0          LOAD_FAST 0 
  18:81:3a    STORE_ATTR file
  50          LOAD_CONST_FALSE 
  b0          LOAD_FAST 0 
  18:81:41    STORE_ATTR already_write
  52          LOAD_CONST_TRUE 
  63          RETURN_VALUE 
  50          LOAD_CONST_FALSE 
  63          RETURN_VALUE 
  12:81:00    LOAD_GLOBAL uart_write
  90          LOAD_CONST_SMALL_INT 16 
  12:81:4e    LOAD_GLOBAL bytearray
  80          LOAD_CONST_SMALL_INT 0 
  2b:01       BUILD_LIST 1
  34:01       CALL_FUNCTION 1
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  14:81:21    LOAD_METHOD close
  36:00       CALL_METHOD 0
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  b0          LOAD_FAST 0 
  18:81:3a    STORE_ATTR file
  50          LOAD_CONST_FALSE 
  b0          LOAD_FAST 0 
  18:81:41    STORE_ATTR already_write
  52          LOAD_CONST_TRUE 
  63          RETURN_VALUE 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: __tickPlay
  raw bytecode: 237 41:36:81:44:81:6e:90:21:28:2f:2f:22:2b:3c:2b:22:23:30:22:2e:2b:44:3b:28:2a:25:27:25:22:b0:13:81:3a:51:de:44:5e:12:81:63:b0:13:81:34:10:36:34:02:b0:18:81:3a:12:81:00:90:12:81:4e:80:2b:01:34:01:34:02:59:52:c1:b0:13:81:37:b0:13:81:38:d7:44:69:b0:57:13:81:37:12:81:00:95:b0:13:81:39:b0:13:81:37:51:2e:02:55:34:02:e5:5a:18:81:37:b0:13:81:37:b0:13:81:38:d7:44:42:50:c1:b1:44:50:b0:13:81:3a:14:7d:b0:13:81:39:36:01:b0:18:81:38:42:6d:12:81:00:95:b0:13:81:39:34:02:b0:18:81:37:b0:13:81:37:b0:13:81:38:d7:44:44:50:c1:42:50:b0:13:81:3a:14:7d:b0:13:81:39:36:01:b0:18:81:38:b0:13:81:38:80:d8:44:43:b1:43:08:b0:13:81:38:80:da:44:5d:b0:13:81:3a:14:81:21:36:00:59:51:b0:18:81:3a:22:81:48:b0:18:81:37:80:b0:18:81:38:52:63:50:63
  prelude: (9, 0, 0, 1, 0, 0)
  args: ['self']
  line info: 90:21:28:2f:2f:22:2b:3c:2b:22:23:30:22:2e:2b:44:3b:28:2a:25:27:25:22
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  51          LOAD_CONST_NONE 
  de          BINARY_OP 7 <is> 
  44:5e       POP_JUMP_IF_FALSE 30
  12:81:63    LOAD_GLOBAL open
  b0          LOAD_FAST 0 
  13:81:34    LOAD_ATTR currentFileName
  10:36       LOAD_CONST_STRING r
  34:02       CALL_FUNCTION 2
  b0          LOAD_FAST 0 
  18:81:3a    STORE_ATTR file
  12:81:00    LOAD_GLOBAL uart_write
  90          LOAD_CONST_SMALL_INT 16 
  12:81:4e    LOAD_GLOBAL bytearray
  80          LOAD_CONST_SMALL_INT 0 
  2b:01       BUILD_LIST 1
  34:01       CALL_FUNCTION 1
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  52          LOAD_CONST_TRUE 
  c1          STORE_FAST 1 
  b0          LOAD_FAST 0 
  13:81:37    LOAD_ATTR count
  b0          LOAD_FAST 0 
  13:81:38    LOAD_ATTR read_len
  d7          BINARY_OP 0 __lt__ 
  44:69       POP_JUMP_IF_FALSE 41
  b0          LOAD_FAST 0 
  57          DUP_TOP 
  13:81:37    LOAD_ATTR count
  12:81:00    LOAD_GLOBAL uart_write
  95          LOAD_CONST_SMALL_INT 21 
  b0          LOAD_FAST 0 
  13:81:39    LOAD_ATTR playing_buf
  b0          LOAD_FAST 0 
  13:81:37    LOAD_ATTR count
  51          LOAD_CONST_NONE 
  2e:02       BUILD_SLICE 2
  55          LOAD_SUBSCR 
  34:02       CALL_FUNCTION 2
  e5          BINARY_OP 14 __iadd__ 
  5a          ROT_TWO 
  18:81:37    STORE_ATTR count
  b0          LOAD_FAST 0 
  13:81:37    LOAD_ATTR count
  b0          LOAD_FAST 0 
  13:81:38    LOAD_ATTR read_len
  d7          BINARY_OP 0 __lt__ 
  44:42       POP_JUMP_IF_FALSE 2
  50          LOAD_CONST_FALSE 
  c1          STORE_FAST 1 
  b1          LOAD_FAST 1 
  44:50       POP_JUMP_IF_FALSE 16
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  14:7d       LOAD_METHOD readinto
  b0          LOAD_FAST 0 
  13:81:39    LOAD_ATTR playing_buf
  36:01       CALL_METHOD 1
  b0          LOAD_FAST 0 
  18:81:38    STORE_ATTR read_len
  42:6d       JUMP 45
  12:81:00    LOAD_GLOBAL uart_write
  95          LOAD_CONST_SMALL_INT 21 
  b0          LOAD_FAST 0 
  13:81:39    LOAD_ATTR playing_buf
  34:02       CALL_FUNCTION 2
  b0          LOAD_FAST 0 
  18:81:37    STORE_ATTR count
  b0          LOAD_FAST 0 
  13:81:37    LOAD_ATTR count
  b0          LOAD_FAST 0 
  13:81:38    LOAD_ATTR read_len
  d7          BINARY_OP 0 __lt__ 
  44:44       POP_JUMP_IF_FALSE 4
  50          LOAD_CONST_FALSE 
  c1          STORE_FAST 1 
  42:50       JUMP 16
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  14:7d       LOAD_METHOD readinto
  b0          LOAD_FAST 0 
  13:81:39    LOAD_ATTR playing_buf
  36:01       CALL_METHOD 1
  b0          LOAD_FAST 0 
  18:81:38    STORE_ATTR read_len
  b0          LOAD_FAST 0 
  13:81:38    LOAD_ATTR read_len
  80          LOAD_CONST_SMALL_INT 0 
  d8          BINARY_OP 1 __gt__ 
  44:43       POP_JUMP_IF_FALSE 3
  b1          LOAD_FAST 1 
  43:08       POP_JUMP_IF_TRUE -56
  b0          LOAD_FAST 0 
  13:81:38    LOAD_ATTR read_len
  80          LOAD_CONST_SMALL_INT 0 
  da          BINARY_OP 3 __le__ 
  44:5d       POP_JUMP_IF_FALSE 29
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  14:81:21    LOAD_METHOD close
  36:00       CALL_METHOD 0
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  b0          LOAD_FAST 0 
  18:81:3a    STORE_ATTR file
  22:81:48    LOAD_CONST_SMALL_INT 200
  b0          LOAD_FAST 0 
  18:81:37    STORE_ATTR count
  80          LOAD_CONST_SMALL_INT 0 
  b0          LOAD_FAST 0 
  18:81:38    STORE_ATTR read_len
  52          LOAD_CONST_TRUE 
  63          RETURN_VALUE 
  50          LOAD_CONST_FALSE 
  63          RETURN_VALUE 
  children: []
simple_name: __stop
  raw bytecode: 67 21:14:81:42:81:6e:90:3a:2e:2f:29:2a:b0:13:81:25:44:57:b0:13:81:36:82:d9:44:4f:12:81:00:90:12:81:4e:80:2b:01:34:01:34:02:59:b0:13:81:3a:51:de:d3:44:4f:b0:13:81:3a:14:81:21:36:00:59:51:b0:18:81:3a:51:63
  prelude: (5, 0, 0, 1, 0, 0)
  args: ['self']
  line info: 90:3a:2e:2f:29:2a
  b0          LOAD_FAST 0 
  13:81:25    LOAD_ATTR isRecord
  44:57       POP_JUMP_IF_FALSE 23
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  82          LOAD_CONST_SMALL_INT 2 
  d9          BINARY_OP 2 __eq__ 
  44:4f       POP_JUMP_IF_FALSE 15
  12:81:00    LOAD_GLOBAL uart_write
  90          LOAD_CONST_SMALL_INT 16 
  12:81:4e    LOAD_GLOBAL bytearray
  80          LOAD_CONST_SMALL_INT 0 
  2b:01       BUILD_LIST 1
  34:01       CALL_FUNCTION 1
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  51          LOAD_CONST_NONE 
  de          BINARY_OP 7 <is> 
  d3          UNARY_OP 3 <not> 
  44:4f       POP_JUMP_IF_FALSE 15
  b0          LOAD_FAST 0 
  13:81:3a    LOAD_ATTR file
  14:81:21    LOAD_METHOD close
  36:00       CALL_METHOD 0
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  b0          LOAD_FAST 0 
  18:81:3a    STORE_ATTR file
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: tickStep
  raw bytecode: 190 11:34:81:1c:81:6e:90:41:27:28:25:29:28:28:25:2a:28:28:25:28:28:28:49:28:25:2a:28:28:b0:13:81:25:44:eb:80:b0:13:81:36:80:d9:44:4e:81:b0:18:81:36:23:07:b0:18:81:34:42:d3:80:b0:13:81:36:81:d9:44:57:b0:14:81:44:36:00:44:4d:82:b0:18:81:36:b0:13:81:33:b0:18:81:34:42:74:b0:13:81:36:82:d9:44:55:b0:14:81:43:36:00:44:4b:83:b0:18:81:36:23:09:b0:18:81:34:42:57:b0:13:81:36:83:d9:44:4f:b0:14:81:44:36:00:44:45:84:b0:18:81:36:42:40:42:6e:b0:13:81:36:80:d9:44:4f:82:b0:18:81:36:b0:13:81:33:b0:18:81:34:42:57:b0:13:81:36:82:d9:44:4f:b0:14:81:44:36:00:44:45:84:b0:18:81:36:42:40:51:63
  prelude: (3, 0, 0, 1, 0, 0)
  args: ['self']
  line info: 90:41:27:28:25:29:28:28:25:2a:28:28:25:28:28:28:49:28:25:2a:28:28
  b0          LOAD_FAST 0 
  13:81:25    LOAD_ATTR isRecord
  44:eb:80    POP_JUMP_IF_FALSE 107
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  80          LOAD_CONST_SMALL_INT 0 
  d9          BINARY_OP 2 __eq__ 
  44:4e       POP_JUMP_IF_FALSE 14
  81          LOAD_CONST_SMALL_INT 1 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  23:07       LOAD_CONST_OBJ 'record_start.dat'
  b0          LOAD_FAST 0 
  18:81:34    STORE_ATTR currentFileName
  42:d3:80    JUMP 83
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  81          LOAD_CONST_SMALL_INT 1 
  d9          BINARY_OP 2 __eq__ 
  44:57       POP_JUMP_IF_FALSE 23
  b0          LOAD_FAST 0 
  14:81:44    LOAD_METHOD __tickPlay
  36:00       CALL_METHOD 0
  44:4d       POP_JUMP_IF_FALSE 13
  82          LOAD_CONST_SMALL_INT 2 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  b0          LOAD_FAST 0 
  13:81:33    LOAD_ATTR fileName
  b0          LOAD_FAST 0 
  18:81:34    STORE_ATTR currentFileName
  42:74       JUMP 52
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  82          LOAD_CONST_SMALL_INT 2 
  d9          BINARY_OP 2 __eq__ 
  44:55       POP_JUMP_IF_FALSE 21
  b0          LOAD_FAST 0 
  14:81:43    LOAD_METHOD __tickRecord
  36:00       CALL_METHOD 0
  44:4b       POP_JUMP_IF_FALSE 11
  83          LOAD_CONST_SMALL_INT 3 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  23:09       LOAD_CONST_OBJ 'record_end.dat'
  b0          LOAD_FAST 0 
  18:81:34    STORE_ATTR currentFileName
  42:57       JUMP 23
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  83          LOAD_CONST_SMALL_INT 3 
  d9          BINARY_OP 2 __eq__ 
  44:4f       POP_JUMP_IF_FALSE 15
  b0          LOAD_FAST 0 
  14:81:44    LOAD_METHOD __tickPlay
  36:00       CALL_METHOD 0
  44:45       POP_JUMP_IF_FALSE 5
  84          LOAD_CONST_SMALL_INT 4 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  42:40       JUMP 0
  42:6e       JUMP 46
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  80          LOAD_CONST_SMALL_INT 0 
  d9          BINARY_OP 2 __eq__ 
  44:4f       POP_JUMP_IF_FALSE 15
  82          LOAD_CONST_SMALL_INT 2 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  b0          LOAD_FAST 0 
  13:81:33    LOAD_ATTR fileName
  b0          LOAD_FAST 0 
  18:81:34    STORE_ATTR currentFileName
  42:57       JUMP 23
  b0          LOAD_FAST 0 
  13:81:36    LOAD_ATTR step
  82          LOAD_CONST_SMALL_INT 2 
  d9          BINARY_OP 2 __eq__ 
  44:4f       POP_JUMP_IF_FALSE 15
  b0          LOAD_FAST 0 
  14:81:44    LOAD_METHOD __tickPlay
  36:00       CALL_METHOD 0
  44:45       POP_JUMP_IF_FALSE 5
  84          LOAD_CONST_SMALL_INT 4 
  b0          LOAD_FAST 0 
  18:81:36    STORE_ATTR step
  42:40       JUMP 0
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: PushPlayRecordMission
  raw bytecode: 74 bb:01:26:81:18:81:5f:81:60:81:61:90:5e:28:20:20:28:29:24:28:29:24:12:19:b0:b1:b2:34:03:c3:12:81:4c:51:de:d3:44:4d:12:81:4c:14:81:19:36:00:59:51:17:81:4c:12:81:4d:51:de:d3:44:49:12:81:4d:14:81:19:36:00:59:b3:17:81:4c:b3:63
  prelude: (8, 0, 0, 3, 0, 1)
  args: ['is_record', 'file_name', 'sec']
  line info: 90:5e:28:20:20:28:29:24:28:29:24
  12:19       LOAD_GLOBAL PlayRecordMission
  b0          LOAD_FAST 0 
  b1          LOAD_FAST 1 
  b2          LOAD_FAST 2 
  34:03       CALL_FUNCTION 3
  c3          STORE_FAST 3 
  12:81:4c    LOAD_GLOBAL nextMission
  51          LOAD_CONST_NONE 
  de          BINARY_OP 7 <is> 
  d3          UNARY_OP 3 <not> 
  44:4d       POP_JUMP_IF_FALSE 13
  12:81:4c    LOAD_GLOBAL nextMission
  14:81:19    LOAD_METHOD interrupt
  36:00       CALL_METHOD 0
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  17:81:4c    STORE_GLOBAL nextMission
  12:81:4d    LOAD_GLOBAL currentMission
  51          LOAD_CONST_NONE 
  de          BINARY_OP 7 <is> 
  d3          UNARY_OP 3 <not> 
  44:49       POP_JUMP_IF_FALSE 9
  12:81:4d    LOAD_GLOBAL currentMission
  14:81:19    LOAD_METHOD interrupt
  36:00       CALL_METHOD 0
  59          POP_TOP 
  b3          LOAD_FAST 3 
  17:81:4c    STORE_GLOBAL nextMission
  b3          LOAD_FAST 3 
  63          RETURN_VALUE 
  children: []
simple_name: play_record_loop
  raw bytecode: 82 88:40:1e:81:1a:90:6b:20:20:20:28:2a:26:46:26:24:28:29:12:81:4d:51:de:d3:44:56:12:81:4d:14:81:1b:36:00:44:4a:12:81:4c:17:81:4d:51:17:81:4c:42:4a:12:81:4c:17:81:4d:51:17:81:4c:12:81:4d:51:de:d3:44:49:12:81:4d:14:81:1c:36:00:59:52:67:59:42:02:51:63
  prelude: (2, 0, 1, 0, 0, 0)
  args: []
  line info: 90:6b:20:20:20:28:2a:26:46:26:24:28:29
  12:81:4d    LOAD_GLOBAL currentMission
  51          LOAD_CONST_NONE 
  de          BINARY_OP 7 <is> 
  d3          UNARY_OP 3 <not> 
  44:56       POP_JUMP_IF_FALSE 22
  12:81:4d    LOAD_GLOBAL currentMission
  14:81:1b    LOAD_METHOD isFinish
  36:00       CALL_METHOD 0
  44:4a       POP_JUMP_IF_FALSE 10
  12:81:4c    LOAD_GLOBAL nextMission
  17:81:4d    STORE_GLOBAL currentMission
  51          LOAD_CONST_NONE 
  17:81:4c    STORE_GLOBAL nextMission
  42:4a       JUMP 10
  12:81:4c    LOAD_GLOBAL nextMission
  17:81:4d    STORE_GLOBAL currentMission
  51          LOAD_CONST_NONE 
  17:81:4c    STORE_GLOBAL nextMission
  12:81:4d    LOAD_GLOBAL currentMission
  51          LOAD_CONST_NONE 
  de          BINARY_OP 7 <is> 
  d3          UNARY_OP 3 <not> 
  44:49       POP_JUMP_IF_FALSE 9
  12:81:4d    LOAD_GLOBAL currentMission
  14:81:1c    LOAD_METHOD tickStep
  36:00       CALL_METHOD 0
  59          POP_TOP 
  52          LOAD_CONST_TRUE 
  67          YIELD_VALUE 
  59          POP_TOP 
  42:02       JUMP -62
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: playAsync
  raw bytecode: 34 a1:01:10:81:1d:81:62:90:7b:28:25:12:0a:14:81:1e:36:00:c1:b0:b1:dd:44:48:12:81:18:50:b0:34:02:59:51:63
  prelude: (5, 0, 0, 1, 0, 1)
  args: ['path']
  line info: 90:7b:28:25
  12:0a       LOAD_GLOBAL os
  14:81:1e    LOAD_METHOD listdir
  36:00       CALL_METHOD 0
  c1          STORE_FAST 1 
  b0          LOAD_FAST 0 
  b1          LOAD_FAST 1 
  dd          BINARY_OP 6 <in> 
  44:48       POP_JUMP_IF_FALSE 8
  12:81:18    LOAD_GLOBAL PushPlayRecordMission
  50          LOAD_CONST_FALSE 
  b0          LOAD_FAST 0 
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: playUntilDone
  raw bytecode: 55 a9:41:16:81:1f:81:62:90:81:28:25:28:22:2d:12:0a:14:81:1e:36:00:c1:b0:b1:dd:44:57:12:81:18:50:b0:34:02:c2:42:43:52:67:59:b2:14:81:1b:36:00:50:de:43:33:50:67:59:51:63
  prelude: (6, 0, 1, 1, 0, 1)
  args: ['path']
  line info: 90:81:28:25:28:22:2d
  12:0a       LOAD_GLOBAL os
  14:81:1e    LOAD_METHOD listdir
  36:00       CALL_METHOD 0
  c1          STORE_FAST 1 
  b0          LOAD_FAST 0 
  b1          LOAD_FAST 1 
  dd          BINARY_OP 6 <in> 
  44:57       POP_JUMP_IF_FALSE 23
  12:81:18    LOAD_GLOBAL PushPlayRecordMission
  50          LOAD_CONST_FALSE 
  b0          LOAD_FAST 0 
  34:02       CALL_FUNCTION 2
  c2          STORE_FAST 2 
  42:43       JUMP 3
  52          LOAD_CONST_TRUE 
  67          YIELD_VALUE 
  59          POP_TOP 
  b2          LOAD_FAST 2 
  14:81:1b    LOAD_METHOD isFinish
  36:00       CALL_METHOD 0
  50          LOAD_CONST_FALSE 
  de          BINARY_OP 7 <is> 
  43:33       POP_JUMP_IF_TRUE -13
  50          LOAD_CONST_FALSE 
  67          YIELD_VALUE 
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: play
  raw bytecode: 92 c1:01:22:81:20:81:62:90:8a:28:25:29:29:22:20:27:24:25:4a:24:12:0a:14:81:1e:36:00:c1:b0:b1:dd:44:79:12:81:4e:22:81:48:34:01:c2:12:81:63:b0:10:36:34:02:c3:80:c4:b3:14:7d:b2:36:01:c5:b4:81:e5:c4:b5:80:d8:44:4a:12:81:03:95:b2:34:02:59:42:42:42:42:42:22:b3:14:81:21:36:00:59:51:63
  prelude: (9, 0, 0, 1, 0, 1)
  args: ['path']
  line info: 90:8a:28:25:29:29:22:20:27:24:25:4a:24
  12:0a       LOAD_GLOBAL os
  14:81:1e    LOAD_METHOD listdir
  36:00       CALL_METHOD 0
  c1          STORE_FAST 1 
  b0          LOAD_FAST 0 
  b1          LOAD_FAST 1 
  dd          BINARY_OP 6 <in> 
  44:79       POP_JUMP_IF_FALSE 57
  12:81:4e    LOAD_GLOBAL bytearray
  22:81:48    LOAD_CONST_SMALL_INT 200
  34:01       CALL_FUNCTION 1
  c2          STORE_FAST 2 
  12:81:63    LOAD_GLOBAL open
  b0          LOAD_FAST 0 
  10:36       LOAD_CONST_STRING r
  34:02       CALL_FUNCTION 2
  c3          STORE_FAST 3 
  80          LOAD_CONST_SMALL_INT 0 
  c4          STORE_FAST 4 
  b3          LOAD_FAST 3 
  14:7d       LOAD_METHOD readinto
  b2          LOAD_FAST 2 
  36:01       CALL_METHOD 1
  c5          STORE_FAST 5 
  b4          LOAD_FAST 4 
  81          LOAD_CONST_SMALL_INT 1 
  e5          BINARY_OP 14 __iadd__ 
  c4          STORE_FAST 4 
  b5          LOAD_FAST 5 
  80          LOAD_CONST_SMALL_INT 0 
  d8          BINARY_OP 1 __gt__ 
  44:4a       POP_JUMP_IF_FALSE 10
  12:81:03    LOAD_GLOBAL uart_write_buf
  95          LOAD_CONST_SMALL_INT 21 
  b2          LOAD_FAST 2 
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  42:42       JUMP 2
  42:42       JUMP 2
  42:22       JUMP -30
  b3          LOAD_FAST 3 
  14:81:21    LOAD_METHOD close
  36:00       CALL_METHOD 0
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: recAsync
  raw bytecode: 23 aa:80:01:10:81:22:81:62:81:61:90:9a:12:81:18:52:b0:b1:34:03:59:51:63
  prelude: (6, 0, 0, 2, 0, 2)
  args: ['path', 'sec']
  line info: 90:9a
  12:81:18    LOAD_GLOBAL PushPlayRecordMission
  52          LOAD_CONST_TRUE 
  b0          LOAD_FAST 0 
  b1          LOAD_FAST 1 
  34:03       CALL_FUNCTION 3
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: recUntilDone
  raw bytecode: 44 b2:c0:01:16:81:23:81:62:81:61:90:9e:29:22:2d:12:81:18:52:b0:b1:34:03:c2:42:43:52:67:59:b2:14:81:1b:36:00:50:de:43:33:50:67:59:51:63
  prelude: (7, 0, 1, 2, 0, 2)
  args: ['path', 'sec']
  line info: 90:9e:29:22:2d
  12:81:18    LOAD_GLOBAL PushPlayRecordMission
  52          LOAD_CONST_TRUE 
  b0          LOAD_FAST 0 
  b1          LOAD_FAST 1 
  34:03       CALL_FUNCTION 3
  c2          STORE_FAST 2 
  42:43       JUMP 3
  52          LOAD_CONST_TRUE 
  67          YIELD_VALUE 
  59          POP_TOP 
  b2          LOAD_FAST 2 
  14:81:1b    LOAD_METHOD isFinish
  36:00       CALL_METHOD 0
  50          LOAD_CONST_FALSE 
  de          BINARY_OP 7 <is> 
  43:33       POP_JUMP_IF_TRUE -13
  50          LOAD_CONST_FALSE 
  67          YIELD_VALUE 
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: stopRecord
  raw bytecode: 34 08:0a:81:24:90:a5:30:12:81:4d:51:de:d3:44:51:12:81:4d:13:81:25:44:49:12:81:4d:14:81:19:36:00:59:51:63
  prelude: (2, 0, 0, 0, 0, 0)
  args: []
  line info: 90:a5:30
  12:81:4d    LOAD_GLOBAL currentMission
  51          LOAD_CONST_NONE 
  de          BINARY_OP 7 <is> 
  d3          UNARY_OP 3 <not> 
  44:51       POP_JUMP_IF_FALSE 17
  12:81:4d    LOAD_GLOBAL currentMission
  13:81:25    LOAD_ATTR isRecord
  44:49       POP_JUMP_IF_FALSE 9
  12:81:4d    LOAD_GLOBAL currentMission
  14:81:19    LOAD_METHOD interrupt
  36:00       CALL_METHOD 0
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: rec
  raw bytecode: 304 fa:80:01:50:81:26:81:62:81:61:90:ab:25:22:28:24:29:29:4f:27:29:48:23:24:44:23:24:25:22:24:29:29:25:29:30:27:29:36:25:29:2a:2d:27:2f:b1:94:d8:44:42:94:c1:12:81:20:23:07:34:01:59:b1:86:f4:c2:12:81:4e:22:a0:00:34:01:c3:12:81:63:b0:10:3b:34:02:c4:12:81:00:90:12:81:4e:81:2b:01:34:01:34:02:59:12:81:4e:83:34:01:c5:12:81:4e:22:81:4a:34:01:c6:12:81:4e:23:08:34:01:c7:42:8f:81:b2:81:f3:c2:22:a0:00:c8:42:f7:80:22:81:48:c9:b8:b9:d7:44:42:b8:c9:b9:b7:82:56:12:81:48:14:7c:b7:36:01:59:12:81:48:14:7d:b5:36:01:ca:ba:83:dc:44:49:12:81:54:10:81:27:34:01:59:12:81:48:14:7d:b6:b5:82:55:81:f2:36:02:81:f3:ca:ba:b5:82:55:dc:44:49:12:81:54:10:81:28:34:01:59:b6:80:ba:2e:02:55:b3:22:a0:00:b8:f3:22:a0:00:b8:f3:ba:f2:2e:02:56:b9:ba:dc:44:49:12:08:14:81:04:8a:36:01:59:b8:ba:f3:c8:b8:80:d8:43:83:7f:b4:14:7c:b3:36:01:59:b2:80:d8:43:eb:7e:b4:14:81:21:36:00:59:12:81:00:90:12:81:4e:80:2b:01:34:01:34:02:59:12:81:20:23:09:34:01:59:51:63
  prelude: (16, 0, 0, 2, 0, 2)
  args: ['path', 'sec']
  line info: 90:ab:25:22:28:24:29:29:4f:27:29:48:23:24:44:23:24:25:22:24:29:29:25:29:30:27:29:36:25:29:2a:2d:27:2f
  b1          LOAD_FAST 1                       # push() args[1] 也就是第二个参数 'sec'
  94          LOAD_CONST_SMALL_INT 20           # push(20)
  d8          BINARY_OP 1 __gt__                # if pop(0) > pop(1):
  44:42       POP_JUMP_IF_FALSE 2               # goto +2 (12:81:20)
  94          LOAD_CONST_SMALL_INT 20           # push(20)
  c1          STORE_FAST 1                      # args[1] = 20
  12:81:20    LOAD_GLOBAL play                  # 准备 play 全局函数
  23:07       LOAD_CONST_OBJ 'record_start.dat' # push 'record_start.dat'
  34:01       CALL_FUNCTION 1                   # 调用 play 函数
  59          POP_TOP                           # pop
  b1          LOAD_FAST 1                       # /// 太麻烦了 慢慢卷吧  
  86          LOAD_CONST_SMALL_INT 6 
  f4          BINARY_OP 29 __mul__ 
  c2          STORE_FAST 2 
  12:81:4e    LOAD_GLOBAL bytearray
  22:a0:00    LOAD_CONST_SMALL_INT 4096
  34:01       CALL_FUNCTION 1
  c3          STORE_FAST 3 
  12:81:63    LOAD_GLOBAL open
  b0          LOAD_FAST 0 
  10:3b       LOAD_CONST_STRING w
  34:02       CALL_FUNCTION 2
  c4          STORE_FAST 4 
  12:81:00    LOAD_GLOBAL uart_write            # 准备 uart_write 全局函数 
  90          LOAD_CONST_SMALL_INT 16 
  12:81:4e    LOAD_GLOBAL bytearray
  81          LOAD_CONST_SMALL_INT 1 
  2b:01       BUILD_LIST 1
  34:01       CALL_FUNCTION 1
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  12:81:4e    LOAD_GLOBAL bytearray
  83          LOAD_CONST_SMALL_INT 3 
  34:01       CALL_FUNCTION 1
  c5          STORE_FAST 5 
  12:81:4e    LOAD_GLOBAL bytearray
  22:81:4a    LOAD_CONST_SMALL_INT 202
  34:01       CALL_FUNCTION 1
  c6          STORE_FAST 6 
  12:81:4e    LOAD_GLOBAL bytearray
  23:08       LOAD_CONST_OBJ b'\x80\x11\x08'
  34:01       CALL_FUNCTION 1
  c7          STORE_FAST 7 
  42:8f:81    JUMP 143
  b2          LOAD_FAST 2 
  81          LOAD_CONST_SMALL_INT 1 
  f3          BINARY_OP 28 __sub__ 
  c2          STORE_FAST 2 
  22:a0:00    LOAD_CONST_SMALL_INT 4096
  c8          STORE_FAST 8 
  42:f7:80    JUMP 119
  22:81:48    LOAD_CONST_SMALL_INT 200
  c9          STORE_FAST 9 
  b8          LOAD_FAST 8 
  b9          LOAD_FAST 9 
  d7          BINARY_OP 0 __lt__ 
  44:42       POP_JUMP_IF_FALSE 2
  b8          LOAD_FAST 8 
  c9          STORE_FAST 9 
  b9          LOAD_FAST 9 
  b7          LOAD_FAST 7 
  82          LOAD_CONST_SMALL_INT 2 
  56          STORE_SUBSCR 
  12:81:48    LOAD_GLOBAL uart
  14:7c       LOAD_METHOD write
  b7          LOAD_FAST 7 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  12:81:48    LOAD_GLOBAL uart
  14:7d       LOAD_METHOD readinto
  b5          LOAD_FAST 5 
  36:01       CALL_METHOD 1
  ca          STORE_FAST 10 
  ba          LOAD_FAST 10 
  83          LOAD_CONST_SMALL_INT 3 
  dc          BINARY_OP 5 __ne__ 
  44:49       POP_JUMP_IF_FALSE 9
  12:81:54    LOAD_GLOBAL print
  10:81:27    LOAD_CONST_STRING err1
  34:01       CALL_FUNCTION 1
  59          POP_TOP 
  12:81:48    LOAD_GLOBAL uart
  14:7d       LOAD_METHOD readinto
  b6          LOAD_FAST 6 
  b5          LOAD_FAST 5 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  81          LOAD_CONST_SMALL_INT 1 
  f2          BINARY_OP 27 __add__ 
  36:02       CALL_METHOD 2
  81          LOAD_CONST_SMALL_INT 1 
  f3          BINARY_OP 28 __sub__ 
  ca          STORE_FAST 10 
  ba          LOAD_FAST 10 
  b5          LOAD_FAST 5 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  dc          BINARY_OP 5 __ne__ 
  44:49       POP_JUMP_IF_FALSE 9
  12:81:54    LOAD_GLOBAL print
  10:81:28    LOAD_CONST_STRING err2
  34:01       CALL_FUNCTION 1
  59          POP_TOP 
  b6          LOAD_FAST 6 
  80          LOAD_CONST_SMALL_INT 0 
  ba          LOAD_FAST 10 
  2e:02       BUILD_SLICE 2
  55          LOAD_SUBSCR 
  b3          LOAD_FAST 3 
  22:a0:00    LOAD_CONST_SMALL_INT 4096
  b8          LOAD_FAST 8 
  f3          BINARY_OP 28 __sub__ 
  22:a0:00    LOAD_CONST_SMALL_INT 4096
  b8          LOAD_FAST 8 
  f3          BINARY_OP 28 __sub__ 
  ba          LOAD_FAST 10 
  f2          BINARY_OP 27 __add__ 
  2e:02       BUILD_SLICE 2
  56          STORE_SUBSCR 
  b9          LOAD_FAST 9 
  ba          LOAD_FAST 10 
  dc          BINARY_OP 5 __ne__ 
  44:49       POP_JUMP_IF_FALSE 9
  12:08       LOAD_GLOBAL time
  14:81:04    LOAD_METHOD sleep_ms
  8a          LOAD_CONST_SMALL_INT 10 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  b8          LOAD_FAST 8 
  ba          LOAD_FAST 10 
  f3          BINARY_OP 28 __sub__ 
  c8          STORE_FAST 8 
  b8          LOAD_FAST 8 
  80          LOAD_CONST_SMALL_INT 0 
  d8          BINARY_OP 1 __gt__ 
  43:83:7f    POP_JUMP_IF_TRUE -125
  b4          LOAD_FAST 4 
  14:7c       LOAD_METHOD write
  b3          LOAD_FAST 3 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  b2          LOAD_FAST 2 
  80          LOAD_CONST_SMALL_INT 0 
  d8          BINARY_OP 1 __gt__ 
  43:eb:7e    POP_JUMP_IF_TRUE -149
  b4          LOAD_FAST 4 
  14:81:21    LOAD_METHOD close
  36:00       CALL_METHOD 0
  59          POP_TOP 
  12:81:00    LOAD_GLOBAL uart_write
  90          LOAD_CONST_SMALL_INT 16 
  12:81:4e    LOAD_GLOBAL bytearray
  80          LOAD_CONST_SMALL_INT 0 
  2b:01       BUILD_LIST 1
  34:01       CALL_FUNCTION 1
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  12:81:20    LOAD_GLOBAL play
  23:09       LOAD_CONST_OBJ 'record_end.dat'
  34:01       CALL_FUNCTION 1
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: led_show_bytes_async
  raw bytecode: 29 19:12:81:29:81:64:90:d2:28:20:28:12:81:00:88:b0:34:02:59:12:81:51:81:e5:17:81:51:51:63
  prelude: (4, 0, 0, 1, 0, 0)
  args: ['show_bytes']
  line info: 90:d2:28:20:28
  12:81:00    LOAD_GLOBAL uart_write # 准备全局 uart_write 函数（参数['addr', 'data']）
  88          LOAD_CONST_SMALL_INT 8 # 参数0，是8
  b0          LOAD_FAST 0            # 参数1，是show_bytes
  34:02       CALL_FUNCTION 2        # 调用函数 uart_write
  59          POP_TOP                # 扔掉结果
  12:81:51    LOAD_GLOBAL showIndex  # 准备全局 showIndex 变量
  81          LOAD_CONST_SMALL_INT 1 # push() 1
  e5          BINARY_OP 14 __iadd__  # showIndex += 1
  17:81:51    STORE_GLOBAL showIndex # save showIndex
  51          LOAD_CONST_NONE        # None
  63          RETURN_VALUE           # return None
  children: []
simple_name: led_show_bytes
  raw bytecode: 68 21:14:81:2a:81:64:90:d9:27:2a:5a:2b:12:81:29:b0:34:01:59:12:81:53:b0:34:01:85:d8:44:5a:12:08:14:81:04:12:81:53:b0:34:01:85:f3:22:80:64:f4:22:83:10:f2:36:01:59:42:4b:12:08:14:81:04:22:83:10:36:01:59:51:63
  prelude: (5, 0, 0, 1, 0, 0)
  args: ['show_bytes']
  line info: 90:d9:27:2a:5a:2b
  12:81:29    LOAD_GLOBAL led_show_bytes_async
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  59          POP_TOP 
  12:81:53    LOAD_GLOBAL len
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  85          LOAD_CONST_SMALL_INT 5 
  d8          BINARY_OP 1 __gt__ 
  44:5a       POP_JUMP_IF_FALSE 26
  12:08       LOAD_GLOBAL time
  14:81:04    LOAD_METHOD sleep_ms
  12:81:53    LOAD_GLOBAL len
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  85          LOAD_CONST_SMALL_INT 5 
  f3          BINARY_OP 28 __sub__ 
  22:80:64    LOAD_CONST_SMALL_INT 100
  f4          BINARY_OP 29 __mul__ 
  22:83:10    LOAD_CONST_SMALL_INT 400
  f2          BINARY_OP 27 __add__ 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  42:4b       JUMP 11
  12:08       LOAD_GLOBAL time
  14:81:04    LOAD_METHOD sleep_ms
  22:83:10    LOAD_CONST_SMALL_INT 400
  36:01       CALL_METHOD 1
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: led_show_string
  raw bytecode: 52 29:14:81:2b:81:65:a0:4b:27:25:4f:2b:12:81:2c:b0:34:01:c1:b1:85:d8:44:4f:12:08:14:81:04:b1:22:81:00:f4:36:01:59:42:4b:12:08:14:81:04:22:82:00:36:01:59:51:63
  prelude: (6, 0, 0, 1, 0, 0)
  args: ['show_string']
  line info: a0:4b:27:25:4f:2b
  12:81:2c    LOAD_GLOBAL led_show_string_async
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  c1          STORE_FAST 1 
  b1          LOAD_FAST 1 
  85          LOAD_CONST_SMALL_INT 5 
  d8          BINARY_OP 1 __gt__ 
  44:4f       POP_JUMP_IF_FALSE 15
  12:08       LOAD_GLOBAL time
  14:81:04    LOAD_METHOD sleep_ms
  b1          LOAD_FAST 1 
  22:81:00    LOAD_CONST_SMALL_INT 128
  f4          BINARY_OP 29 __mul__ 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  42:4b       JUMP 11
  12:08       LOAD_GLOBAL time
  14:81:04    LOAD_METHOD sleep_ms
  22:82:00    LOAD_CONST_SMALL_INT 256
  36:01       CALL_METHOD 1
  59          POP_TOP 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: led_show_string_async
  raw bytecode: 154 49:2a:81:2c:81:65:a0:54:27:26:2d:25:29:4c:26:26:28:29:4c:2f:28:20:28:12:81:5b:b0:34:01:c0:12:81:4e:34:00:c1:12:81:66:8a:12:81:53:b0:34:01:34:02:c2:b2:80:d8:44:5b:b0:80:55:12:81:4f:dd:44:4c:b1:12:81:4f:b0:80:55:55:e5:c1:42:46:b1:12:81:50:e5:c1:b2:81:42:67:57:c3:b1:14:81:01:80:36:01:59:b0:b3:55:12:81:4f:dd:44:4c:b1:12:81:4f:b0:b3:55:55:e5:c1:42:46:b1:12:81:50:e5:c1:81:e5:58:5a:d7:43:14:59:59:12:81:00:88:b1:34:02:59:12:81:51:81:e5:17:81:51:12:81:53:b1:34:01:63
  prelude: (10, 0, 0, 1, 0, 0)
  args: ['show_string']
  line info: a0:54:27:26:2d:25:29:4c:26:26:28:29:4c:2f:28:20:28
  12:81:5b    LOAD_GLOBAL str
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  c0          STORE_FAST 0 
  12:81:4e    LOAD_GLOBAL bytearray
  34:00       CALL_FUNCTION 0
  c1          STORE_FAST 1 
  12:81:66    LOAD_GLOBAL min
  8a          LOAD_CONST_SMALL_INT 10 
  12:81:53    LOAD_GLOBAL len
  b0          LOAD_FAST 0 
  34:01       CALL_FUNCTION 1
  34:02       CALL_FUNCTION 2
  c2          STORE_FAST 2 
  b2          LOAD_FAST 2 
  80          LOAD_CONST_SMALL_INT 0 
  d8          BINARY_OP 1 __gt__ 
  44:5b       POP_JUMP_IF_FALSE 27
  b0          LOAD_FAST 0 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  12:81:4f    LOAD_GLOBAL charPointMap
  dd          BINARY_OP 6 <in> 
  44:4c       POP_JUMP_IF_FALSE 12
  b1          LOAD_FAST 1 
  12:81:4f    LOAD_GLOBAL charPointMap
  b0          LOAD_FAST 0 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  55          LOAD_SUBSCR 
  e5          BINARY_OP 14 __iadd__ 
  c1          STORE_FAST 1 
  42:46       JUMP 6
  b1          LOAD_FAST 1 
  12:81:50    LOAD_GLOBAL defaultCharPointMap
  e5          BINARY_OP 14 __iadd__ 
  c1          STORE_FAST 1 
  b2          LOAD_FAST 2 
  81          LOAD_CONST_SMALL_INT 1 
  42:67       JUMP 39
  57          DUP_TOP 
  c3          STORE_FAST 3 
  b1          LOAD_FAST 1 
  14:81:01    LOAD_METHOD append
  80          LOAD_CONST_SMALL_INT 0 
  36:01       CALL_METHOD 1
  59          POP_TOP 
  b0          LOAD_FAST 0 
  b3          LOAD_FAST 3 
  55          LOAD_SUBSCR 
  12:81:4f    LOAD_GLOBAL charPointMap
  dd          BINARY_OP 6 <in> 
  44:4c       POP_JUMP_IF_FALSE 12
  b1          LOAD_FAST 1 
  12:81:4f    LOAD_GLOBAL charPointMap
  b0          LOAD_FAST 0 
  b3          LOAD_FAST 3 
  55          LOAD_SUBSCR 
  55          LOAD_SUBSCR 
  e5          BINARY_OP 14 __iadd__ 
  c1          STORE_FAST 1 
  42:46       JUMP 6
  b1          LOAD_FAST 1 
  12:81:50    LOAD_GLOBAL defaultCharPointMap
  e5          BINARY_OP 14 __iadd__ 
  c1          STORE_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  e5          BINARY_OP 14 __iadd__ 
  58          DUP_TOP_TWO 
  5a          ROT_TWO 
  d7          BINARY_OP 0 __lt__ 
  43:14       POP_JUMP_IF_TRUE -44
  59          POP_TOP 
  59          POP_TOP 
  12:81:00    LOAD_GLOBAL uart_write
  88          LOAD_CONST_SMALL_INT 8 
  b1          LOAD_FAST 1 
  34:02       CALL_FUNCTION 2
  59          POP_TOP 
  12:81:51    LOAD_GLOBAL showIndex
  81          LOAD_CONST_SMALL_INT 1 
  e5          BINARY_OP 14 __iadd__ 
  17:81:51    STORE_GLOBAL showIndex
  12:81:53    LOAD_GLOBAL len
  b1          LOAD_FAST 1 
  34:01       CALL_FUNCTION 1
  63          RETURN_VALUE 
  children: []
simple_name: read_volume
  raw bytecode: 15 10:08:81:2d:a0:69:12:7f:92:81:34:02:83:55:63
  prelude: (3, 0, 0, 0, 0, 0)
  args: []
  line info: a0:69
  12:7f       LOAD_GLOBAL uart_read
  92          LOAD_CONST_SMALL_INT 18 
  81          LOAD_CONST_SMALL_INT 1 
  34:02       CALL_FUNCTION 2
  83          LOAD_CONST_SMALL_INT 3 
  55          LOAD_SUBSCR 
  63          RETURN_VALUE 
  children: []
simple_name: CheckForward
  raw bytecode: 58 b9:04:1c:81:2e:81:67:81:68:81:69:81:6a:81:6b:a0:6d:12:81:6c:b0:80:55:b1:f3:34:01:b4:d7:46:1a:12:81:6c:b0:81:55:b2:f3:34:01:b4:d7:46:0c:12:81:6c:b0:82:55:b3:f3:34:01:b4:d7:63
  prelude: (8, 0, 0, 5, 0, 0)
  args: ['acc', 'x_mid', 'y_mid', 'z_mid', 'margin']
  line info: a0:6d
  12:81:6c    LOAD_GLOBAL abs
  b0          LOAD_FAST 0 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  b1          LOAD_FAST 1 
  f3          BINARY_OP 28 __sub__ 
  34:01       CALL_FUNCTION 1
  b4          LOAD_FAST 4 
  d7          BINARY_OP 0 __lt__ 
  46:1a       JUMP_IF_FALSE_OR_POP 26
  12:81:6c    LOAD_GLOBAL abs
  b0          LOAD_FAST 0 
  81          LOAD_CONST_SMALL_INT 1 
  55          LOAD_SUBSCR 
  b2          LOAD_FAST 2 
  f3          BINARY_OP 28 __sub__ 
  34:01       CALL_FUNCTION 1
  b4          LOAD_FAST 4 
  d7          BINARY_OP 0 __lt__ 
  46:0c       JUMP_IF_FALSE_OR_POP 12
  12:81:6c    LOAD_GLOBAL abs
  b0          LOAD_FAST 0 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  b3          LOAD_FAST 3 
  f3          BINARY_OP 28 __sub__ 
  34:01       CALL_FUNCTION 1
  b4          LOAD_FAST 4 
  d7          BINARY_OP 0 __lt__ 
  63          RETURN_VALUE 
  children: []
simple_name: IsForward
  raw bytecode: 164 21:28:81:2f:81:6d:a0:71:26:25:28:25:28:25:1f:25:25:1f:25:25:28:25:12:81:09:34:00:c1:b0:81:d9:44:48:b1:81:55:22:fa:44:d7:63:b0:82:d9:44:48:b1:81:55:22:85:3c:d8:63:b0:83:d9:44:64:b1:82:55:22:fa:44:d7:46:1a:12:81:6c:b1:80:55:34:01:22:82:2c:d7:46:0c:12:81:6c:b1:81:55:34:01:22:82:2c:d7:63:b0:84:d9:44:64:b1:82:55:22:85:3c:d8:46:1a:12:81:6c:b1:80:55:34:01:22:82:2c:d7:46:0c:12:81:6c:b1:81:55:34:01:22:82:2c:d7:63:b0:85:d9:44:48:b1:80:55:22:85:3c:d8:63:b0:86:d9:44:48:b1:80:55:22:fa:44:d7:63:51:63
  prelude: (5, 0, 0, 1, 0, 0)
  args: ['forward']
  line info: a0:71:26:25:28:25:28:25:1f:25:25:1f:25:25:28:25
  12:81:09    LOAD_GLOBAL GetAccelerationRaw
  34:00       CALL_FUNCTION 0
  c1          STORE_FAST 1 
  b0          LOAD_FAST 0 
  81          LOAD_CONST_SMALL_INT 1 
  d9          BINARY_OP 2 __eq__ 
  44:48       POP_JUMP_IF_FALSE 8
  b1          LOAD_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  55          LOAD_SUBSCR 
  22:fa:44    LOAD_CONST_SMALL_INT -700
  d7          BINARY_OP 0 __lt__ 
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  82          LOAD_CONST_SMALL_INT 2 
  d9          BINARY_OP 2 __eq__ 
  44:48       POP_JUMP_IF_FALSE 8
  b1          LOAD_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  55          LOAD_SUBSCR 
  22:85:3c    LOAD_CONST_SMALL_INT 700
  d8          BINARY_OP 1 __gt__ 
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  83          LOAD_CONST_SMALL_INT 3 
  d9          BINARY_OP 2 __eq__ 
  44:64       POP_JUMP_IF_FALSE 36
  b1          LOAD_FAST 1 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  22:fa:44    LOAD_CONST_SMALL_INT -700
  d7          BINARY_OP 0 __lt__ 
  46:1a       JUMP_IF_FALSE_OR_POP 26
  12:81:6c    LOAD_GLOBAL abs
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  34:01       CALL_FUNCTION 1
  22:82:2c    LOAD_CONST_SMALL_INT 300
  d7          BINARY_OP 0 __lt__ 
  46:0c       JUMP_IF_FALSE_OR_POP 12
  12:81:6c    LOAD_GLOBAL abs
  b1          LOAD_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  55          LOAD_SUBSCR 
  34:01       CALL_FUNCTION 1
  22:82:2c    LOAD_CONST_SMALL_INT 300
  d7          BINARY_OP 0 __lt__ 
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  84          LOAD_CONST_SMALL_INT 4 
  d9          BINARY_OP 2 __eq__ 
  44:64       POP_JUMP_IF_FALSE 36
  b1          LOAD_FAST 1 
  82          LOAD_CONST_SMALL_INT 2 
  55          LOAD_SUBSCR 
  22:85:3c    LOAD_CONST_SMALL_INT 700
  d8          BINARY_OP 1 __gt__ 
  46:1a       JUMP_IF_FALSE_OR_POP 26
  12:81:6c    LOAD_GLOBAL abs
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  34:01       CALL_FUNCTION 1
  22:82:2c    LOAD_CONST_SMALL_INT 300
  d7          BINARY_OP 0 __lt__ 
  46:0c       JUMP_IF_FALSE_OR_POP 12
  12:81:6c    LOAD_GLOBAL abs
  b1          LOAD_FAST 1 
  81          LOAD_CONST_SMALL_INT 1 
  55          LOAD_SUBSCR 
  34:01       CALL_FUNCTION 1
  22:82:2c    LOAD_CONST_SMALL_INT 300
  d7          BINARY_OP 0 __lt__ 
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  85          LOAD_CONST_SMALL_INT 5 
  d9          BINARY_OP 2 __eq__ 
  44:48       POP_JUMP_IF_FALSE 8
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  22:85:3c    LOAD_CONST_SMALL_INT 700
  d8          BINARY_OP 1 __gt__ 
  63          RETURN_VALUE 
  b0          LOAD_FAST 0 
  86          LOAD_CONST_SMALL_INT 6 
  d9          BINARY_OP 2 __eq__ 
  44:48       POP_JUMP_IF_FALSE 8
  b1          LOAD_FAST 1 
  80          LOAD_CONST_SMALL_INT 0 
  55          LOAD_SUBSCR 
  22:fa:44    LOAD_CONST_SMALL_INT -700
  d7          BINARY_OP 0 __lt__ 
  63          RETURN_VALUE 
  51          LOAD_CONST_NONE 
  63          RETURN_VALUE 
  children: []
simple_name: voidCommand
  raw bytecode: 8 00:08:81:30:a0:81:80:63
  prelude: (1, 0, 0, 0, 0, 0)
  args: []
  line info: a0:81
  80          LOAD_CONST_SMALL_INT 0 
  63          RETURN_VALUE 
  children: []
simple_name: version
  raw bytecode: 9 00:08:81:31:a0:85:23:0a:63
  prelude: (1, 0, 0, 0, 0, 0)
  args: []
  line info: a0:85
  23:0a       LOAD_CONST_OBJ 'v_2020_7_31'
  63          RETURN_VALUE 
  children: []
